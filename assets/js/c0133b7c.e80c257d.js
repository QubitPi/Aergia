"use strict";(self.webpackChunkhashicorp_aws=self.webpackChunkhashicorp_aws||[]).push([[5009],{3057:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>I,contentTitle:()=>T,default:()=>W,frontMatter:()=>A,metadata:()=>C,toc:()=>P});var s=i(5893),a=i(1151),r=i(7294),t=i(6010),l=i(2466),o=i(6550),c=i(469),h=i(1980),d=i(7392),u=i(12);function p(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:i}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:i,attributes:s,default:a}}=e;return{value:n,label:i,attributes:s,default:a}}))}(i);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function g(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:i}=e;const s=(0,o.k6)(),a=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,h._X)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(s.location.search);n.set(a,e),s.replace({...s.location,search:n.toString()})}),[a,s])]}function f(e){const{defaultValue:n,queryString:i=!1,groupId:s}=e,a=m(e),[t,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=i.find((e=>e.default))??i[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:a}))),[o,h]=b({queryString:i,groupId:s}),[d,p]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,a]=(0,u.Nk)(i);return[s,(0,r.useCallback)((e=>{i&&a.set(e)}),[i,a])]}({groupId:s}),f=(()=>{const e=o??d;return g({value:e,tabValues:a})?e:null})();(0,c.Z)((()=>{f&&l(f)}),[f]);return{selectedValue:t,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),p(e)}),[h,p,a]),tabValues:a}}var j=i(2389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function w(e){let{className:n,block:i,selectedValue:a,selectValue:r,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:h}=(0,l.o5)(),d=e=>{const n=e.currentTarget,i=c.indexOf(n),s=o[i].value;s!==a&&(h(n),r(s))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=c.indexOf(e.currentTarget)+1;n=c[i]??c[0];break}case"ArrowLeft":{const i=c.indexOf(e.currentTarget)-1;n=c[i]??c[c.length-1];break}}n?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":i},n),children:o.map((e=>{let{value:n,label:i,attributes:r}=e;return(0,s.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>c.push(e),onKeyDown:u,onClick:d,...r,className:(0,t.Z)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":a===n}),children:i??n},n)}))})}function v(e){let{lazy:n,children:i,selectedValue:a}=e;const t=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=t.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:t.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=f(e);return(0,s.jsxs)("div",{className:(0,t.Z)("tabs-container",x.tabList),children:[(0,s.jsx)(w,{...e,...n}),(0,s.jsx)(v,{...e,...n})]})}function _(e){const n=(0,j.Z)();return(0,s.jsx)(y,{...e,children:p(e.children)},String(n))}const S={tabItem:"tabItem_Ymn6"};function k(e){let{children:n,hidden:i,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)(S.tabItem,a),hidden:i,children:n})}const A={sidebar_position:6,title:"Jersey-Jetty Based Webservice"},T="Deploying Jersey-Jetty Based Webservice",C={id:"webservice",title:"Jersey-Jetty Based Webservice",description:"[//]: # (Copyright Jiaqi Liu)",source:"@site/docs/webservice.mdx",sourceDirName:".",slug:"/webservice",permalink:"/hashicorp-aws/docs/webservice",draft:!1,unlisted:!1,editUrl:"https://github.com/QubitPi/hashicorp-aws/tree/master/docs/docs/webservice.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Jersey-Jetty Based Webservice"},sidebar:"tutorialSidebar",previous:{title:"React App",permalink:"/hashicorp-aws/docs/react"},next:{title:"Configuration Management for Immutable Infrastructure",permalink:"/hashicorp-aws/docs/IaC-configuration-management"}},I={},P=[{value:"SSL",id:"ssl",level:2},{value:"General Deployments",id:"general-deployments",level:2},{value:"AWS Credentials",id:"aws-credentials",level:3},{value:"Installing HashiCorp Packer &amp; Terraform",id:"installing-hashicorp-packer--terraform",level:3},{value:"Getting HashiCorp Deployment Tool",id:"getting-hashicorp-deployment-tool",level:3},{value:"Defining Packer Variables",id:"defining-packer-variables",level:3},{value:"Defining Terraform Variables",id:"defining-terraform-variables",level:3},{value:"Deployment via GitHub Actions",id:"deployment-via-github-actions",level:2},{value:"Jersey Webservice Template (JPA through Elide)",id:"jersey-webservice-template-jpa-through-elide",level:3},{value:"Installing Data Models",id:"installing-data-models",level:4},{value:"Docker Compose",id:"docker-compose",level:4},{value:"Deployment via Screwdriver CD",id:"deployment-via-screwdriver-cd",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"AWS",id:"aws",level:3},{value:"The Webservice was Running Properly Right After Deployment, but NOT After a While with &quot;503 Service Unavailable&quot;",id:"the-webservice-was-running-properly-right-after-deployment-but-not-after-a-while-with-503-service-unavailable",level:4}];function E(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"deploying-jersey-jetty-based-webservice",children:"Deploying Jersey-Jetty Based Webservice"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Yes, we DO NOT support Spring, never ever"}),"\n",(0,s.jsxs)(n.li,{children:["EBS volumes during build time will ",(0,s.jsx)(n.a,{href:"https://qubitpi.github.io/hashicorp-packer/packer/integrations/hashicorp/amazon/latest/components/builder/ebs#:~:text=Optional%3A-,delete_on_termination,-(bool)%20%2D%20Indicates%20whether",children:"automatically be removed"})]}),"\n"]})}),"\n",(0,s.jsx)(n.p,{children:"Immutable Webservice by hashicorp-aws supports 2 deployment modes:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"SSL/HTTPS"}),"\n",(0,s.jsx)(n.li,{children:"non-SSL/HTTPS"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The first mode is very suitable for a mini-project such as a frontend backed by a single webservice. The second mode\nis designed for\n",(0,s.jsx)(n.a,{href:"https://dev.to/behalf/authentication-authorization-in-microservices-architecture-part-i-2cn0#global-authentication-api-gateway-and-authorization-per-service",children:"microservices architecture where authentication is deletgated to an API gateway"})]}),"\n",(0,s.jsx)(n.h2,{id:"ssl",children:"SSL"}),"\n",(0,s.jsxs)(n.p,{children:["Please follow the ",(0,s.jsx)(n.a,{href:"setup#setup",children:"general setup guide"})," if we are deploying in SSL/HTTPS mode. Otherwise this section can\nbe skipped"]}),"\n",(0,s.jsx)(n.h2,{id:"general-deployments",children:"General Deployments"}),"\n",(0,s.jsx)(n.h3,{id:"aws-credentials",children:"AWS Credentials"}),"\n",(0,s.jsx)(n.p,{children:"The following environment variables need to be defined:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"setup#aws",children:"AWS_ACCESS_KEY_ID"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"setup#aws",children:"AWS_SECRET_ACCESS_KEY"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"installing-hashicorp-packer--terraform",children:"Installing HashiCorp Packer & Terraform"}),"\n",(0,s.jsx)(n.p,{children:"We will go through deployment using Packer & Terraform command line tools which can be installed by following the\ninstructions below:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[Installing Packer][HashiCorp Packer - Install]"}),"\n",(0,s.jsx)(n.li,{children:"[Installing Terraform][HashiCorp Terraform - Install]"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"getting-hashicorp-deployment-tool",children:"Getting HashiCorp Deployment Tool"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"git clone https://github.com/QubitPi/hashicorp-aws.git\n"})}),"\n",(0,s.jsx)(n.h3,{id:"defining-packer-variables",children:"Defining Packer Variables"}),"\n",(0,s.jsxs)(n.p,{children:["Create a [HashiCorp Packer variable values file] named ",(0,s.jsx)(n.strong,{children:"aws-ws.auto.pkrvars.hcl"})," under one of the subdirectory of\n",(0,s.jsx)(n.strong,{children:"[hashicorp-aws/hashicorp/webservice/images]"}),", depending on the deployment mode, with the following contents:"]}),"\n",(0,s.jsxs)(_,{children:[(0,s.jsxs)(k,{value:"non-ssl",label:"non-SSL/HTTPS",default:!0,children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",metastring:"title=hashicorp-aws/hashicorp/webservice/images/basic/aws-kong.auto.pkrvars.hcl",children:'aws_image_region                 = "my-aws-region"\nami_name                         = "my-webservice"\ninstance_type                    = "<one of t2.micro/t2.small/t2.medium/t2.large/t2.xlarge/t2.2xlarge>"\nws_war_path                      = "my-webservice-1.0-SNAPSHOT.war"\naws_ws_filebeat_config_file_path = "filebeat.yml"\n'})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aws_image_region"})," is the [image region][AWS regions] of [AWS AMI]"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ami_name"})," is the published AMI name; it can be arbitrary"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"instance_type"})," is the recommended [AWS EC2 instance type] running this image"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ws_war_path"})," is the absolute path or the path relative to ",(0,s.jsx)(n.code,{children:"hashicorp-aws/hashicorp/webservice/images/basic"})," of\nthe webservice WAR file we are going to deploy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aws_ws_filebeat_config_file_path"})," is the absolute path or the path relative to\n",(0,s.jsx)(n.code,{children:"hashicorp-aws/hashicorp/webservice/images/basic"})," of the [filebeat config file]"]}),"\n"]})]}),(0,s.jsxs)(k,{value:"ssl",label:"SSL/HTTPS",children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",metastring:"title=hashicorp-aws/hashicorp/webservice/images/ssl/aws-kong.auto.pkrvars.hcl",children:'aws_image_region                 = "my-aws-region"\nami_name                         = "my-webservice"\ninstance_type                    = "<one of t2.micro/t2.small/t2.medium/t2.large/t2.xlarge/t2.2xlarge>"\nws_war_path                      = "my-webservice-1.0-SNAPSHOT.war"\naws_ws_filebeat_config_file_path = "filebeat.yml"\naws_ws_ssl_cert_file_path        = "server.crt"\naws_ws_ssl_cert_key_file_path    = "server.key"\naws_ws_nginx_config_file_path    = "nginx.conf"\n'})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aws_image_region"})," is the [image region][AWS regions] of [AWS AMI]"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ami_name"})," is the published AMI name; it can be arbitrary"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"instance_type"})," is the recommended [AWS EC2 instance type] running this image"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ws_war_path"})," is the absolute path or the path relative to ",(0,s.jsx)(n.code,{children:"hashicorp-aws/hashicorp/webservice/images/basic"})," of\nthe webservice WAR file we are going to deploy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aws_ws_filebeat_config_file_path"})," is the absolute path or the path relative to\n",(0,s.jsx)(n.code,{children:"hashicorp-aws/hashicorp/webservice/images/basic"})," of the [filebeat config file]"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aws_kong_ssl_cert_file_path"})," is the absolute path or the path relative to ",(0,s.jsx)(n.code,{children:"hashicorp-aws/hashicorp/kong/images"})," of\nthe ",(0,s.jsx)(n.a,{href:"setup#ssl",children:"SSL certificate file"})," for the Kong API Gateway domain"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aws_kong_ssl_cert_key_file_path"}),"  is the absolute path or the path relative to ",(0,s.jsx)(n.code,{children:"hashicorp-aws/hashicorp/kong/images"})," of the ",(0,s.jsx)(n.a,{href:"setup#ssl",children:"SSL certificate key file"})," for the Kong API Gateway domain"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aws_kong_nginx_config_file_path"})," is the absolute path or the path relative to ",(0,s.jsx)(n.code,{children:"hashicorp-aws/hashicorp/kong/images"}),"\nof the ",(0,s.jsx)(n.a,{href:"#nginx-config",children:"Nginx config file"})]}),"\n"]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"defining-terraform-variables",children:"Defining Terraform Variables"}),"\n",(0,s.jsxs)(n.p,{children:["Create a [HashiCorp Terraform variable values file] named ",(0,s.jsx)(n.strong,{children:"aws-ws.auto.tfvars"})," under\n",(0,s.jsx)(n.strong,{children:"[hashicorp-aws/hashicorp/webservice/instances]"})," directory with the following contents:"]}),"\n",(0,s.jsxs)(_,{children:[(0,s.jsx)(k,{value:"non-ssl",label:"non-SSL/HTTPS",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",metastring:"title=hashicorp-aws/hashicorp/webservice/instances/basic/aws-ws.auto.tfvars",children:'aws_deploy_region   = "my-aws-region"\nami_name            = "my-webservice"\ninstance_type       = "<one of t2.micro/t2.small/t2.medium/t2.large/t2.xlarge/t2.2xlarge>"\nec2_instance_name   = "My Webservice"\nec2_security_groups = ["My Webservice"]\nsentry_dsn          = "can be empty if sentry.io is not needed"\n'})})}),(0,s.jsxs)(k,{value:"ssl",label:"SSL/HTTPS",children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",metastring:"title=hashicorp-aws/hashicorp/webservice/instances/ssl/aws-ws.auto.tfvars",children:'aws_deploy_region   = "my-aws-region"\nami_name            = "my-webservice"\ninstance_type       = "<one of t2.micro/t2.small/t2.medium/t2.large/t2.xlarge/t2.2xlarge>"\nec2_instance_name   = "My Webservice"\nec2_security_groups = ["My Webservice"]\nroute_53_zone_id    = "9DQXLTNSN7ZX9P8V2KZII"\nws_domain           = "mywebservice.mycompany.com"\nsentry_dsn          = "can be empty if sentry.io is not needed"\n'})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"aws_deploy_region"})," is the [EC2 runtime region][AWS regions]"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ami_name"})," is the name of the published AMI; ",(0,s.jsxs)(n.strong,{children:["it must be the same as the ",(0,s.jsx)(n.code,{children:"ami_name"})," in\n",(0,s.jsx)(n.a,{href:"#defining-packer-variables",children:"Packer variable file"})]})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"instance_type"})," is the chosen [AWS EC2 instance type] at runtime"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ec2_instance_name"})," is the deployed EC2 name as appeared in the instance list of AWS console; it can be arbitrary"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ec2_security_groups"})," is the [AWS Security Group] ",(0,s.jsx)(n.em,{children:"name"})," (yes, not ID, but name...)"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ws_domain"})," is the SSL-enabled domain that will serve [Kong manager UI]"]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Although the ",(0,s.jsx)(n.code,{children:"ws_domain"})," is a public identity, ",(0,s.jsx)(n.a,{href:"https://qubitpi.github.io/hashicorp-aws/",children:"hashicorp-aws"})," will bind a ",(0,s.jsx)(n.strong,{children:"private IP"})," address to this domain,\nbecause webservice tend to be deployed in a virtual private network and AWS also requires\n",(0,s.jsx)(n.a,{href:"https://serverfault.com/a/967483",children:"EC2 instances of different Security Groups to communicate through private IP"})]})}),"\n"]}),"\n"]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"deployment-via-github-actions",children:"Deployment via GitHub Actions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"jobs:\n  hashicorp:\n    name: Generated Webservice WAR in GitHub Action, and Publish Template AMI Image and Deploy it to EC2 through HashiCorp\n    needs: tests\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n      - name: Deployment environment setup\n        uses: QubitPi/hashicorp-aws/hashicorp/webservice/auxiliary/github/actions/cd-setup@master\n        with:\n          aws-ws-pkrvars-hcl: ${{ secrets.AWS_WS_PKRVARS_HCL }}\n          ssl-certificate: ${{ secrets.SSL_CERTIFICATE }}\n          ssl-certificate-key: ${{ secrets.SSL_CERTIFICATE_KEY }}\n          nginx-config-file: ${{ secrets.NGINX_CONFIG_FILE }}\n          aws-ws-tfvars: ${{ secrets.AWS_WS_TFVARS }}\n      - name: Generate webservice WAR file\n        run: mvn -B clean package\n      - name: Move WAR file to a location for HashiCorp deployment to pickup\n        run: mv target/astraios-1.0-SNAPSHOT.war ../hashicorp-aws/hashicorp/webservice/images/\n      - name: QubitPi/hashicorp-aws\n        uses: QubitPi/hashicorp-aws@master\n        with:\n          hashicorp-dir: ../hashicorp-aws/hashicorp/webservice\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: ${{ secrets.AWS_REGION }}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"cd-setup"})," step above takes an optional input parameter ",(0,s.jsx)(n.code,{children:"filebeat-config-file"})," which is the Filebeat config file"]}),"\n",(0,s.jsx)(n.h3,{id:"jersey-webservice-template-jpa-through-elide",children:"Jersey Webservice Template (JPA through Elide)"}),"\n",(0,s.jsxs)(n.p,{children:["If deployed webservice is ",(0,s.jsx)(n.a,{href:"https://qubitpi.github.io/jersey-webservice-template/docs/elide/intro",children:"JWT JPA"})," the following\nactions can also be used:"]}),"\n",(0,s.jsx)(n.h4,{id:"installing-data-models",children:"Installing Data Models"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"model-package-jar-group-id"}),' is the Maven group ID of JAR containing data models, e.g. "com.myorg"']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"model-package-jar-artifact-id"}),' is the Maven artifact ID of JAR containing data models, e.g. "my-data-models"']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"model-package-jar-version"}),' is the version of JAR containing data models, e.g. "3.1.7"']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"models-path"}),' is the relative path to the data models repo, usually prefixed by "../". e.g. "../jpa-models"']}),"\n"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"---\nname: My CI/CD\n\njobs:\n  my-job:\n    name: My job name\n    runs-on: ubuntu-latest\n    steps:\n      - uses: QubitPi/hashicorp-aws/hashicorp/webservice/auxiliary/github/actions/jersey-webservice-template/jpa-elide/install-data-models@master\n        with:\n          model-package-jar-group-id: com.myorg\n          model-package-jar-artifact-id: my-data-models\n          model-package-jar-version: 1.0.0\n          models-path: ../my-data-models\n"})}),"\n",(0,s.jsx)(n.h4,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)(n.p,{children:"Required parameters:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"webservice-repo-clone-url"})," is the git clone URL of the GitHub repo generated by ",(0,s.jsx)(n.a,{href:"https://qubitpi.github.io/jersey-webservice-template/",children:"jersey-webservice-template"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"model-package"})," is the\n",(0,s.jsx)(n.a,{href:"https://github.com/QubitPi/jersey-webservice-template-jpa-data-model/blob/master/src/main/java/com/qubitpi/ws/jersey/template/models/Book.java#L16",children:"fully qualified name of the package containing all JPA models"})]}),"\n"]}),(0,s.jsx)(n.p,{children:"Optional parameters:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"oauth-enabled"})," flags whether or not to enable ",(0,s.jsx)(n.a,{href:"https://qubitpi.github.io/jersey-webservice-template/apidocs/com/qubitpi/ws/jersey/template/web/filters/OAuthFilter.html",children:"OAuthFilter"})," container request filter. Default is ",(0,s.jsx)(n.code,{children:"false"})]}),"\n"]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"---\nname: My CI/CD\n\njobs:\n  my-job:\n    name: My job name\n    runs-on: ubuntu-latest\n    steps:\n      - uses: QubitPi/hashicorp-aws/hashicorp/webservice/auxiliary/github/actions/jersey-webservice-template/jpa-elide/docker-compose@master\n        with:\n          webservice-repo-clone-url: https://github.com/QubitPi/jersey-webservice-template.git\n          model-package: ${{ secrets.MODEL_PACKAGE_NAME }}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"deployment-via-screwdriver-cd",children:"Deployment via Screwdriver CD"}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"aws",children:"AWS"}),"\n",(0,s.jsx)(n.h4,{id:"the-webservice-was-running-properly-right-after-deployment-but-not-after-a-while-with-503-service-unavailable",children:'The Webservice was Running Properly Right After Deployment, but NOT After a While with "503 Service Unavailable"'}),"\n",(0,s.jsxs)(n.p,{children:["This could be the resource starvation on EC2 instance. Please try using a bigger EC2 sizes. For example, bumping\n",(0,s.jsx)(n.em,{children:"t2.micro"})," to ",(0,s.jsx)(n.em,{children:"t2.medium"}),". ",(0,s.jsx)(n.a,{href:"https://qubitpi.github.io/hashicorp-aws/",children:"hashicorp-aws"})," currently supports ",(0,s.jsx)(n.strong,{children:"t2.x"})," sizes, i.e. one of the following sizes can be\nselected:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"t2.micro"}),"\n",(0,s.jsx)(n.li,{children:"t2.small"}),"\n",(0,s.jsx)(n.li,{children:"t2.medium"}),"\n",(0,s.jsx)(n.li,{children:"t2.large"}),"\n",(0,s.jsx)(n.li,{children:"t2.xlarge"}),"\n",(0,s.jsx)(n.li,{children:"t2.2xlarge"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["To modify the size, set the value of ",(0,s.jsx)(n.code,{children:"instance_type"})," in both ",(0,s.jsx)(n.em,{children:"aws-ws.pkrvars.hcl"})," and ",(0,s.jsx)(n.em,{children:"aws-ws.tfvars"}),". For\nexample:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",children:'instance_type       = "t2.medium"\n'})})]})}function W(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(E,{...e})}):E(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>t});var s=i(7294);const a={},r=s.createContext(a);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);