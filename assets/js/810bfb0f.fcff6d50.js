"use strict";(self.webpackChunkhashicorp_aws=self.webpackChunkhashicorp_aws||[]).push([[4597],{7759:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>r});var i=e(5893),s=e(1151);const a={slug:"github-slack-notification",title:"Sending GitHub Action Results to Slack Channel",authors:["jiaqi"],tags:["CI/CD","Slack","Team Efficiency"]},o=void 0,c={permalink:"/hashicorp-aws/blog/github-slack-notification",editUrl:"https://github.com/QubitPi/hashicorp-aws/tree/master/docs/blog/2024-01-27-github-slack-notification.md",source:"@site/blog/2024-01-27-github-slack-notification.md",title:"Sending GitHub Action Results to Slack Channel",description:"[//]: # (Copyright Jiaqi Liu)",date:"2024-01-27T00:00:00.000Z",formattedDate:"January 27, 2024",tags:[{label:"CI/CD",permalink:"/hashicorp-aws/blog/tags/ci-cd"},{label:"Slack",permalink:"/hashicorp-aws/blog/tags/slack"},{label:"Team Efficiency",permalink:"/hashicorp-aws/blog/tags/team-efficiency"}],readingTime:1.88,hasTruncateMarker:!0,authors:[{name:"Jiaqi Liu",title:"Maintainer of hashicorp-aws",url:"https://github.com/QubitPi",imageURL:"https://avatars.githubusercontent.com/u/16126939?v=4",key:"jiaqi"}],frontMatter:{slug:"github-slack-notification",title:"Sending GitHub Action Results to Slack Channel",authors:["jiaqi"],tags:["CI/CD","Slack","Team Efficiency"]},unlisted:!1,nextItem:{title:"Using a GitHub Action Matrix to Define Variations for Each Job",permalink:"/hashicorp-aws/blog/github-matrix"}},l={authorsImageUrls:[void 0]},r=[{value:"slack-send",id:"slack-send",level:2},{value:"slack-send v.s. Github Slack Integration",id:"slack-send-vs-github-slack-integration",level:2}];function h(t){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Sending data into Slack using ",(0,i.jsx)(n.a,{href:"https://github.com/marketplace/actions/slack-send",children:"slack-send"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"slack-send",children:"slack-send"}),"\n",(0,i.jsxs)(n.p,{children:["This post discusses practical guide for sending data to Slack via a ",(0,i.jsx)(n.strong,{children:"Slack Incoming Webhook URL"}),". The reason we prefer\nwebhook approach is to preserve the privacy of team member. The chatbot invite approach potentially\nallow all Slack member to touch a private app of an individual"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Follow the ",(0,i.jsx)(n.a,{href:"https://github.com/slackapi/slack-github-action?tab=readme-ov-file#setup-2",children:"setup"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.code,{children:"slack-notification"})," job and a trigger in the last CI/CD job:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:"title=.github/workflows/ci-cd.yml",children:"---\nname: My CI/CD\n\njobs:\n  the-last-job:\n    name: The last CI/CD job in workflow\n    outputs:\n      outcome: ${{ job.status }}\n    continue-on-error: true\n    runs-on: ubuntu-latest\n    steps:\n      ...\n\n  slack-notification:\n    name: Send Slack Notification\n    if: ${{ always() }}\n    needs: the-last-job\n    uses: QubitPi/hashicorp-aws/.github/workflows/slack-notification.yml@master\n    with:\n      job-status: ${{ needs.the-last-job.outputs.outcome }}\n    secrets:\n      slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["Note the key block in ",(0,i.jsx)(n.code,{children:"the-last-job"}),":"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"outputs:\n  outcome: ${{ job.status }}\ncontinue-on-error: true\n"})})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"slack-send-vs-github-slack-integration",children:"slack-send v.s. Github Slack Integration"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/integrations/slack",children:"Github Slack Integration"}),' offers "on-click" experience with almost no configurations like the one above. In addition,\nit sends notification on GitHub issues open/close, pull requests, GitHub Action workflow ',(0,i.jsx)(n.em,{children:"status"}),", etc. The easier setup\nand richer notifications makes ",(0,i.jsx)(n.a,{href:"https://github.com/integrations/slack",children:"Github Slack Integration"})," a better choice for team-collaboration managing multiple\nrepositories with a common communication standards"]}),"\n",(0,i.jsxs)(n.p,{children:["slack-send, on the other hands, supports sending any information about GitHub Action workflow, not just ",(0,i.jsx)(n.em,{children:"status"}),". It\nalso supports custom messages; we can inject emoji or custom pictures in the notification messges, which is a big plus\nfor those who love personal customizations and focuses on only success-or-fail of each GitHub action run."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["With slack-send we also do not need to run ",(0,i.jsx)(n.code,{children:"/invite @GitHub"})," so our channel is completely private."]})})]})}function u(t={}){const{wrapper:n}={...(0,s.a)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(h,{...t})}):h(t)}},1151:(t,n,e)=>{e.d(n,{Z:()=>c,a:()=>o});var i=e(7294);const s={},a=i.createContext(s);function o(t){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function c(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:o(t.components),i.createElement(a.Provider,{value:n},t.children)}}}]);