"use strict";(self.webpackChunkhashicorp_aws=self.webpackChunkhashicorp_aws||[]).push([[1314],{4114:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var i=n(5893),a=n(1151);const r={sidebar_position:7,title:"Configuration Management for Immutable Infrastructure"},s=void 0,o={id:"IaC-configuration-management",title:"Configuration Management for Immutable Infrastructure",description:"[//]: # (Copyright Jiaqi Liu)",source:"@site/docs/7-IaC-configuration-management.md",sourceDirName:".",slug:"/IaC-configuration-management",permalink:"/hashicorp-aws/docs/IaC-configuration-management",draft:!1,unlisted:!1,editUrl:"https://github.com/QubitPi/hashicorp-aws/tree/master/docs/docs/7-IaC-configuration-management.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Configuration Management for Immutable Infrastructure"},sidebar:"tutorialSidebar",previous:{title:"Jersey-Jetty Based Webservice",permalink:"/hashicorp-aws/docs/webservice"}},c={},u=[];function h(e){const t={a:"a",em:"em",img:"img",li:"li",ol:"ol",p:"p",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Being a strong proponent of Immutable Infrastructure, ",(0,i.jsx)(t.a,{href:"https://qubitpi.github.io/hashicorp-aws/",children:"hashicorp-aws"})," is constantly pushing the limits of its ability\nin various use cases, one of which is the ",(0,i.jsx)(t.em,{children:"Configuration Management"})]}),"\n",(0,i.jsx)(t.p,{children:"Traditional configuration management includes Chef, Puppet, and Ansible. They all assume mutable infrastructure being\npresent. For example, Chef has a major component responsible for jumping into a VM, checking if config has been mutated\nbefore apply any operations."}),"\n",(0,i.jsx)(t.p,{children:"With the adoption of Immutable infrastructure, we initially stored and managed our configuration, such as SSL\ncertificate or AWS SECRET ACCESS KEY directly in GitHub Secrets. This has the disadvantage of not being able to see\ntheir values after creation, making it very hard to manage."}),"\n",(0,i.jsx)(t.p,{children:"Then we moved to a centralized runbook, where everything can easily be seen and modified by authorized team members.\nThis exposed a great security risk"}),"\n",(0,i.jsx)(t.p,{children:"So this brought us to the ultimate way of thinking about configuration management in Immutable infrastructure"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(8210).Z+"",width:"1322",height:"662"})}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"We still need GitHub Secrets because that's the most secure way"}),"\n",(0,i.jsx)(t.li,{children:"We would separate config management in a separate repo"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The thing that bridges the two above, is our github-secret action."})]})}function m(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8210:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/github-secret-8df7f31de85271fd5bf4418718da1fae.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>s});var i=n(7294);const a={},r=i.createContext(a);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);