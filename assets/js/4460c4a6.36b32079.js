"use strict";(self.webpackChunkhashicorp_aws=self.webpackChunkhashicorp_aws||[]).push([[5473],{3218:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>h});var a=r(4848),n=r(8453);const o={slug:"testing-hashicorp-terraform",title:"Testing HashiCorp Terraform",authors:["rose-wang"],tags:["HashiCorp","Terraform"]},i=void 0,s={permalink:"/blog/testing-hashicorp-terraform",editUrl:"https://github.com/QubitPi/hashicorp-aws/tree/master/docs/blog/testing-hashicorp-terraform/index.md",source:"@site/blog/testing-hashicorp-terraform/index.md",title:"Testing HashiCorp Terraform",description:"[//]: # (Copyright Jiaqi Liu)",date:"2024-05-01T11:41:49.000Z",formattedDate:"May 1, 2024",tags:[{label:"HashiCorp",permalink:"/blog/tags/hashi-corp"},{label:"Terraform",permalink:"/blog/tags/terraform"}],readingTime:2.17,hasTruncateMarker:!1,authors:[{name:"ROSEMARY WANG",url:"https://www.hashicorp.com/blog/testing-hashicorp-terraform",imageURL:"https://www.hashicorp.com/_next/static/media/terraform_on-dark.8e9a65a1.svg",key:"rose-wang"}],frontMatter:{slug:"testing-hashicorp-terraform",title:"Testing HashiCorp Terraform",authors:["rose-wang"],tags:["HashiCorp","Terraform"]},unlisted:!1,nextItem:{title:"Bumping Semantic Version by GitHub Tag",permalink:"/blog/version-bump"}},c={authorsImageUrls:[void 0]},h=[{value:"The Testing Pyramid",id:"the-testing-pyramid",level:2},{value:"Linting and Formatting",id:"linting-and-formatting",level:2}];function d(e){const t={admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["How do we know if we can run ",(0,a.jsx)(t.code,{children:"terraform apply"})," to our infrastructure without negatively affecting critical business\napplications? We can run ",(0,a.jsx)(t.code,{children:"terraform validate"})," and ",(0,a.jsx)(t.code,{children:"terraform plan"})," to check our configuration, but will that be enough?\nWhether we've updated some HashiCorp Terraform configuration or a new version of a module, we want to catch errors\nquickly before we apply any changes to production infrastructure."]}),"\n",(0,a.jsxs)(t.p,{children:["In this post, We will discuss some testing strategies for HashiCorp Terraform configuration and modules so that we can\n",(0,a.jsx)(t.code,{children:"terraform apply"})," with greater confidence."]}),"\n",(0,a.jsx)(t.h2,{id:"the-testing-pyramid",children:"The Testing Pyramid"}),"\n",(0,a.jsx)(t.p,{children:"In theory, we might decide to align our infrastructure testing strategy with the test pyramid, which groups tests by\ntype, scope, and granularity. The testing pyramid suggests that we write fewer tests in the categories at the top of the\npyramid, and more at the bottom. Those on the pyramid take more time to run and cost more due to the higher number of\nresources we have to configure and create."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Error loading pyramid.png",src:r(7205).A+"",width:"3840",height:"2470"})}),"\n",(0,a.jsx)(t.p,{children:"In reality, our tests may not perfectly align with the pyramid shape. The pyramid offers a common framework to describe\nwhat scope a test can cover to verify configuration and infrastructure resources. We'll start at the bottom of the\npyramid with unit tests and work the way up the pyramid to end-to-end tests."}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsx)(t.p,{children:"hashicorp-aws does not merit any manual testing; so it is not discussed here"})}),"\n",(0,a.jsx)(t.h2,{id:"linting-and-formatting",children:"Linting and Formatting"}),"\n",(0,a.jsxs)(t.p,{children:["While not on the test pyramid, we often encounter tests to verify the hygiene of your Terraform configuration. Use\n",(0,a.jsx)(t.code,{children:"terraform fmt -check"})," and terraform validate to format and validate the correctness of our Terraform configuration."]}),"\n",(0,a.jsx)(t.p,{children:"When we collaborate on Terraform, we may consider testing the Terraform configuration for a set of standards and best\npractices. Build or use a linting tool to analyze our Terraform configuration for specific best practices and patterns.\nFor example, a linter can verify that our teammate defines a Terraform variable for an instance type instead of\nhard-coding the value."})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},7205:(e,t,r)=>{r.d(t,{A:()=>a});const a=r.p+"assets/images/pyramid-c61e3ecc738268f3a07cbcf4faeea8a5.png"},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var a=r(6540);const n={},o=a.createContext(n);function i(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);