"use strict";(self.webpackChunkaergia=self.webpackChunkaergia||[]).push([[9596],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=i.createContext({}),c=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),m=n,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return r?i.createElement(g,o(o({ref:t},p),{},{components:r})):i.createElement(g,o({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1737:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=r(7462),n=(r(7294),r(3905));const a={sidebar_position:4},o="aergia::docker_registry",s={unversionedId:"recipes/docker-registry",id:"recipes/docker-registry",title:"aergia::docker_registry",description:"Deploys a Docker Registry",source:"@site/docs/recipes/docker-registry.md",sourceDirName:"recipes",slug:"/recipes/docker-registry",permalink:"/aergia/docs/recipes/docker-registry",draft:!1,editUrl:"https://github.com/QubitPi/aergia/tree/gh-pages/docs/recipes/docker-registry.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"aergia::certbot",permalink:"/aergia/docs/recipes/certbot"},next:{title:"aergia::jenkins",permalink:"/aergia/docs/recipes/jenkins"}},l={},c=[{value:"Recipe Details",id:"recipe-details",level:2},{value:"Start a Registry",id:"start-a-registry",level:3},{value:"Modify Nginx Reverse Proxy",id:"modify-nginx-reverse-proxy",level:3},{value:"Reload Nginx Config",id:"reload-nginx-config",level:3},{value:"Recipe Verification",id:"recipe-verification",level:2},{value:"About Docker Registry",id:"about-docker-registry",level:2}],p={toc:c};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"aergiadocker_registry"},"aergia::docker_registry"),(0,n.kt)("p",null,"Deploys a Docker Registry"),(0,n.kt)("admonition",{title:"Prerequisites",type:"caution"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"aergia::docker_registry")," requires a ",(0,n.kt)("a",{parentName:"li",href:"docker"},"Docker installation"),"  on a Chef node, because a registry is an instance\nof the ",(0,n.kt)("inlineCode",{parentName:"li"},"registry")," image, and runs within Docker."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"aergia::docker_registry")," recipe will not work unless a working Nginx reverse proxy is setup."))),(0,n.kt)("p",null,"The Registry is a stateless, highly scalable server side application that stores and lets us distribute Docker images.\nThe Registry is ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/distribution/distribution"},"open-source")),(0,n.kt)("admonition",{title:"Difference Between Docker Hub and Docker Registry",type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"Docker Hub")," It is the ",(0,n.kt)("strong",{parentName:"p"},"public"),' repository provided by the Docker itself for pushing and pulling the Images. Docker\nHub is for public use and the default repository, anyone can fetch and pull the Images using the "docker pull" command.'),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"Registry")," is the feature provided by the Docker to create our own ",(0,n.kt)("strong",{parentName:"p"},"private")," repository for storing the Images.\nOther systems on the network can access the repository using the valid credentials. Registry provides security as only\nthe limited users within the organiztion will have access of the same.")),(0,n.kt)("p",null,"We should use the Registry if we want to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"tightly control where our images are being stored"),(0,n.kt)("li",{parentName:"ul"},"fully own our images distribution pipeline"),(0,n.kt)("li",{parentName:"ul"},"integrate image storage and distribution tightly into our in-house development workflow")),(0,n.kt)("p",null,"Running our own Registry is a great solution to integrate with and complement your CI/CD system. In a typical workflow,\na commit to our source revision control system would trigger a build on our CI system, which would then push a new image\nto our Registry if the build is successful. A notification from the Registry would then trigger a deployment on a\nstaging environment, or notify other systems that a new image is available."),(0,n.kt)("p",null,"It's also an essential component if we want to quickly deploy a new image over a large cluster of machines."),(0,n.kt)("p",null,"Finally, it's the best way to distribute images inside an isolated network."),(0,n.kt)("h2",{id:"recipe-details"},"Recipe Details"),(0,n.kt)("h3",{id:"start-a-registry"},"Start a Registry"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"aergia::docker_registry")," runs the Registry inside Docker container and mapps the Registry's port 5000 to port 5001 on\nhost machine:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d -p 5001:5000 --restart=always --name registry registry:2\n")),(0,n.kt)("h3",{id:"modify-nginx-reverse-proxy"},"Modify Nginx Reverse Proxy"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Suppose domain name is ",(0,n.kt)("inlineCode",{parentName:"li"},"my-domain.com")),(0,n.kt)("li",{parentName:"ul"},"SSL certificate is at ",(0,n.kt)("inlineCode",{parentName:"li"},"/absolute/path/to/certificate.pem")),(0,n.kt)("li",{parentName:"ul"},"SSL certificate key is at ",(0,n.kt)("inlineCode",{parentName:"li"},"/absolute/path/to/key.pem"))),(0,n.kt)("p",null,"Provided with the Nginx SSL config path, ",(0,n.kt)("inlineCode",{parentName:"p"},"aergia::docker_registry")," modifies the config file by appending the following\nserver context for Docker Registry:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-conf"},"server {\n    root /var/www/html;\n\n    index index.html index.htm index.nginx-debian.html;\n    server_name my-domain.com;\n\n    location / {\n        proxy_pass http://localhost:5001;\n    }\n\n\n    listen [::]:5000 ssl ipv6only=on;\n    listen 5000 ssl;\n    ssl_certificate /absolute/path/to/certificate.pem;\n    ssl_certificate_key /absolute/path/to/key.pem;\n}\n")),(0,n.kt)("h3",{id:"reload-nginx-config"},"Reload Nginx Config"),(0,n.kt)("h2",{id:"recipe-verification"},"Recipe Verification"),(0,n.kt)("p",null,"Pull (or build) some image from the hub"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull ubuntu\n")),(0,n.kt)("p",null,"Tag the image so that it points to our registry"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker image tag ubuntu my-domain.com:5000/myfirstimage\n")),(0,n.kt)("admonition",{title:"Image Naming",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Image names as used in typical docker commands reflect their origin:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"docker pull ubuntu")," instructs docker to pull an image named ",(0,n.kt)("inlineCode",{parentName:"li"},"ubuntu")," from the ",(0,n.kt)("em",{parentName:"li"},"official Docker Hub"),". This is simply a\nshortcut for the longer ",(0,n.kt)("inlineCode",{parentName:"li"},"docker pull docker.io/library/ubuntu")," command"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"docker pull myregistrydomain:port/foo/bar")," instructs docker to contact the registry located at\n",(0,n.kt)("em",{parentName:"li"},"myregistrydomain:port")," to find the image ",(0,n.kt)("inlineCode",{parentName:"li"},"foo/bar"))),(0,n.kt)("p",{parentName:"admonition"},"People interested to find out more about the various Docker commands dealing with images can visit the\n",(0,n.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/commandline/cli/"},"official Docker engine documentation"),".")),(0,n.kt)("p",null,"Push it"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker push my-domain.com:5000/myfirstimage\n")),(0,n.kt)("p",null,"Pull it back"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull my-domain.com:5000/myfirstimage\n")),(0,n.kt)("h2",{id:"about-docker-registry"},"About Docker Registry"),(0,n.kt)("p",null,"A registry is a storage and content delivery system, holding named Docker images, available in different tagged\nversions. Users interact with a registry by using docker push and pull commands. Users interact with a registry by using\ndocker push and pull commands. For example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull registry-1.docker.io/distribution/registry:2.1.\n")),(0,n.kt)("p",null,"Storage itself is delegated to drivers. The default storage driver is the local posix filesystem, which is suitable for\ndevelopment or small deployments. Additional cloud-based storage drivers like S3, Microsoft Azure, and OpenStack Swift\nare also supported. People looking into using other storage backends may do so by writing their own driver implementing\nthe ",(0,n.kt)("a",{parentName:"p",href:"https://docs.docker.com/registry/storage-drivers/"},"Storage API"),"."),(0,n.kt)("p",null,"Since securing access to your hosted images is paramount, the Registry natively supports TLS and basic authentication."),(0,n.kt)("p",null,"The Registry GitHub repository includes additional information about advanced authentication and authorization methods.\nOnly very large or public deployments are expected to extend the Registry in this way."),(0,n.kt)("p",null,"Finally, the Registry ships with a robust ",(0,n.kt)("a",{parentName:"p",href:"https://docs.docker.com/registry/notifications/"},"notification system"),",\ncalling webhooks in response to activity, and both extensive logging and reporting, mostly useful for large\ninstallations that want to collect metrics."))}d.isMDXComponent=!0}}]);