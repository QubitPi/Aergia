"use strict";(self.webpackChunkhashicorp_aws=self.webpackChunkhashicorp_aws||[]).push([[228],{2740:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var t=i(4848),s=i(8453);const l={slug:"yml-and-md-style-checks",title:"Performing Style Check on YAML & Markdown Files and Link Check",authors:["jiaqi"],tags:["CI/CD","GitHub","Code Style"]},o=void 0,a={permalink:"/hashicorp-aws/blog/yml-and-md-style-checks",editUrl:"https://github.com/QubitPi/hashicorp-aws/tree/master/docs/blog/2024-04-08-yml-md-style-and-link-checks.md",source:"@site/blog/2024-04-08-yml-md-style-and-link-checks.md",title:"Performing Style Check on YAML & Markdown Files and Link Check",description:"[//]: # (Copyright Jiaqi Liu)",date:"2024-04-08T00:00:00.000Z",formattedDate:"April 8, 2024",tags:[{label:"CI/CD",permalink:"/hashicorp-aws/blog/tags/ci-cd"},{label:"GitHub",permalink:"/hashicorp-aws/blog/tags/git-hub"},{label:"Code Style",permalink:"/hashicorp-aws/blog/tags/code-style"}],readingTime:1.92,hasTruncateMarker:!1,authors:[{name:"Jiaqi Liu",title:"Maintainer of hashicorp-aws",url:"https://github.com/QubitPi",imageURL:"https://avatars.githubusercontent.com/u/16126939?v=4",key:"jiaqi"}],frontMatter:{slug:"yml-and-md-style-checks",title:"Performing Style Check on YAML & Markdown Files and Link Check",authors:["jiaqi"],tags:["CI/CD","GitHub","Code Style"]},unlisted:!1,prevItem:{title:"UI Code Style",permalink:"/hashicorp-aws/blog/ui-code-style"},nextItem:{title:"Reusable GitHub Action - Posting GitHub Secrets",permalink:"/hashicorp-aws/blog/github-secret-action"}},r={authorsImageUrls:[void 0]},c=[{value:"Configuring YAML File Style Check",id:"configuring-yaml-file-style-check",level:2},{value:"Configuring Markdown File Style Check",id:"configuring-markdown-file-style-check",level:2},{value:"Regular Configuration File",id:"regular-configuration-file",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Inspired by ",(0,t.jsx)(n.a,{href:"https://github.com/sous-chefs/.github/blob/main/.github/workflows/lint-unit.yml",children:"Sous Chefs"}),", hashicorp-aws\noffers a ",(0,t.jsx)(n.a,{href:"https://docs.github.com/en/actions/using-workflows/reusing-workflows",children:"reusable workflow"})," that performs the\nfollowing code style checks:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"[YAML file style check]"}),"\n",(0,t.jsx)(n.li,{children:"[Markdown file style check]"}),"\n",(0,t.jsx)(n.li,{children:"[Broken link check]"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example Usage:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'name: CI/CD\n\n"on":\n  pull_request:\n  push:\n    branches:\n      - master\n\njobs:\n  yml-md-style-and-link-checks:\n    uses: QubitPi/hashicorp-aws/.github/workflows/yml-md-style-and-link-checks.yml@master\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"The configurations of the composing checks can be configured regularly by following their respective GitHub Actions\ndocumentations. The following sections discusses the configuration by example."})}),"\n",(0,t.jsx)(n.h2,{id:"configuring-yaml-file-style-check",children:"Configuring YAML File Style Check"}),"\n",(0,t.jsxs)(n.p,{children:["Create a file named ",(0,t.jsx)(n.strong,{children:".yamllint"})," at the root of the project with the following example content"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title=".yamllint"',children:'# Copyright Jiaqi Liu\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n---\nextends: default\nrules:\n  line-length:\n    max: 256\n    level: warning\n  document-start: disable\n  braces:\n    forbid: false\n    min-spaces-inside: 0\n    max-spaces-inside: 1\n    min-spaces-inside-empty: -1\n    max-spaces-inside-empty: -1\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["More configuration options can be found at ",(0,t.jsx)(n.a,{href:"https://yamllint.readthedocs.io/en/stable/",children:"yamllint documentation"})]})}),"\n",(0,t.jsx)(n.h2,{id:"configuring-markdown-file-style-check",children:"Configuring Markdown File Style Check"}),"\n",(0,t.jsx)(n.p,{children:"The markdown file style check is splitted into 2 config files:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"regular configuration file"}),"\n",(0,t.jsx)(n.li,{children:"rule configuration file"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"regular-configuration-file",children:"Regular Configuration File"}),"\n",(0,t.jsxs)(n.p,{children:["Create a file named ",(0,t.jsx)(n.strong,{children:".mdlrc"})," at the root of the project with the following content:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title=".mdlrc"',children:'rules "~MD002", "~MD005", "~MD007", "~MD013", "~MD041", "~MD029", "~MD033"\nstyle "#{File.dirname(__FILE__)}/markdownlint.rb"\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const s={},l=t.createContext(s);function o(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);