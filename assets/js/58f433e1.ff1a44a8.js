"use strict";(self.webpackChunkaergia=self.webpackChunkaergia||[]).push([[2537],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(n),h=o,u=c["".concat(l,".").concat(h)]||c[h]||d[h]||r;return n?a.createElement(u,i(i({ref:t},m),{},{components:n})):a.createElement(u,i({ref:t},m))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},9984:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={slug:"nexus",title:"Nexus 3 Repository Manager OSS",authors:["jiaqi"],tags:["Nexus"]},i=void 0,s={permalink:"/aergia/blog/nexus",editUrl:"https://github.com/QubitPi/aergia/tree/gh-pages/blog/2022-09-30-nexus/index.md",source:"@site/blog/2022-09-30-nexus/index.md",title:"Nexus 3 Repository Manager OSS",description:"The proliferation of different repository formats and tools accessing them as well as the emergence of more publicly",date:"2022-09-30T00:00:00.000Z",formattedDate:"September 30, 2022",tags:[{label:"Nexus",permalink:"/aergia/blog/tags/nexus"}],readingTime:40.46,hasTruncateMarker:!0,authors:[{name:"Jiaqi Liu",title:"Maintainer of Aergia",url:"https://github.com/QubitPi",imageURL:"https://avatars.githubusercontent.com/u/16126939?v=4",key:"jiaqi"}],frontMatter:{slug:"nexus",title:"Nexus 3 Repository Manager OSS",authors:["jiaqi"],tags:["Nexus"]},prevItem:{title:"Jenkins Troubleshooting",permalink:"/aergia/blog/jenkins-troubleshooting"},nextItem:{title:"Continuous Delivery",permalink:"/aergia/blog/continuous-delivery"}},l={authorsImageUrls:[void 0]},p=[{value:"System Requirements",id:"system-requirements",level:2},{value:"Memory Requirements",id:"memory-requirements",level:3},{value:"Disk Space",id:"disk-space",level:3},{value:"Concepts",id:"concepts",level:2},{value:"Components",id:"components",level:3},{value:"Repository",id:"repository",level:3},{value:"Repository Format",id:"repository-format",level:3},{value:"Repository Management",id:"repository-management",level:2},{value:"Repository Types",id:"repository-types",level:3},{value:"Proxy Repository",id:"proxy-repository",level:4},{value:"Hosted Repository",id:"hosted-repository",level:4},{value:"Repository Group",id:"repository-group",level:4},{value:"Managing Repositories and Repository Groups",id:"managing-repositories-and-repository-groups",level:3},{value:"Setting Up Maven Repositories",id:"setting-up-maven-repositories",level:4},{value:"Maven Repository Format Overview",id:"maven-repository-format-overview",level:3},{value:"The Central Repository",id:"the-central-repository",level:4},{value:"Component Coordinates and the Repository Format",id:"component-coordinates-and-the-repository-format",level:4},{value:"Release and Snapshot Repositories",id:"release-and-snapshot-repositories",level:4},{value:"Version policy",id:"version-policy",level:3},{value:"Hosting Maven Repositories",id:"hosting-maven-repositories",level:3},{value:"Using Repository Manager with Apache Maven",id:"using-repository-manager-with-apache-maven",level:4},{value:"Setting Up Docker Registry",id:"setting-up-docker-registry",level:3},{value:"Docker Port Scalability",id:"docker-port-scalability",level:4},{value:"Access Control",id:"access-control",level:3},{value:"Realms",id:"realms",level:3},{value:"Privileges",id:"privileges",level:3},{value:"Privilege Names",id:"privilege-names",level:4},{value:"Privilege Types",id:"privilege-types",level:4},{value:"Creating a Privilege",id:"creating-a-privilege",level:4},{value:"Content Selectors",id:"content-selectors",level:3},{value:"Creating a Query",id:"creating-a-query",level:4},{value:"Finer Access Control with &quot;Content Selector privilege&quot;",id:"finer-access-control-with-content-selector-privilege",level:4},{value:"Content Selector Query Reference",id:"content-selector-query-reference",level:4},{value:"Roles",id:"roles",level:3},{value:"Mapping External Groups to Nexus Roles",id:"mapping-external-groups-to-nexus-roles",level:4},{value:"Users",id:"users",level:3},{value:"Default Role",id:"default-role",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"&quot;413 Request Entity Too Large&quot;",id:"413-request-entity-too-large",level:3},{value:"&quot;400 Repository does not allow updating assets&quot;",id:"400-repository-does-not-allow-updating-assets",level:3},{value:"&quot;A database error occurred&quot;",id:"a-database-error-occurred",level:3}],m={toc:p};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The proliferation of different repository formats and tools accessing them as well as the emergence of more publicly\navailable repositories has triggered the need to manage access and usage of these repositories and the components they\ncontain"),(0,o.kt)("p",null,"Hosting our private repositories for internal components has proven to be a very efficient methodology to exchange\ncomponents during all phases of the software development lifecycle. It is considered a best practice at this stage."),(0,o.kt)("p",null,"The task of managing all the repositories a development teams interact with can be supported by the use of a dedicated\nserver application - a ",(0,o.kt)("strong",{parentName:"p"},"repository manager"),". To put it simply, a repository manager provides two core features:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"the ability of proxying a remote repository and cache components saving both bandwidth and time required to\nretrieve a software component from a remote repository repeatedly")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"the ability of hosting a repository providing an organization with a deployment target for internal software\ncomponents"))),(0,o.kt)("p",null,"Just as Source Code Management (SCM) tools are designed to manage source code, repository managers have been designed to\nmanage and trace external dependencies and components generated by internal build."),(0,o.kt)("p",null,"Repository managers are an essential part of any enterprise or open-source software development effort and they enable\ngreater collaboration between developers and wider distribution of software by facilitating the exchange and usage of\nbinary components."),(0,o.kt)("p",null,"When we install a repository manager, we are bringing the power of a repository like the Central Repository into our\norganization. We can use it to proxy the Central Repositories and other repositories, and host our own repositories for\ninternal and external use."),(0,o.kt)("p",null,"In addition to the two aforementioned core features, a repository manager can support the following use cases"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"allows us to manage binary software components through the software development lifecycle"),(0,o.kt)("li",{parentName:"ul"},"search and catalogue software components"),(0,o.kt)("li",{parentName:"ul"},"control component releases with rules and add automated notifications"),(0,o.kt)("li",{parentName:"ul"},"integrate with external security systems, such as LDAP"),(0,o.kt)("li",{parentName:"ul"},"manage component metadata"),(0,o.kt)("li",{parentName:"ul"},"control access to components and repositories"),(0,o.kt)("li",{parentName:"ul"},"display component dependencies"),(0,o.kt)("li",{parentName:"ul"},"brose component archive contents")),(0,o.kt)("p",null,"Using a repository manager provides a number of benefits, including"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"improved software build performance due to faster component download off the local repository manager"),(0,o.kt)("li",{parentName:"ul"},"reduced bandwidth usage due to component caching"),(0,o.kt)("li",{parentName:"ul"},"higher predictability and scalability due to limited dependency on external repositories"),(0,o.kt)("li",{parentName:"ul"},"increased understanding of component usage due to centralized storage of all used components"),(0,o.kt)("li",{parentName:"ul"},"simplified developer configuration due to central access configuration to remote repositories and components on the\nrepository manager"),(0,o.kt)("li",{parentName:"ul"},"unified method to provide components to consumer reducing complexity overheads"),(0,o.kt)("li",{parentName:"ul"},"improved collaboration due to the simplified exchange of binary components")),(0,o.kt)("h2",{id:"system-requirements"},"System Requirements"),(0,o.kt)("h3",{id:"memory-requirements"},"Memory Requirements"),(0,o.kt)("p",null,"The requirements assume there are no other significant memory hungry processes running on the same host."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"center"},"****"),(0,o.kt)("th",{parentName:"tr",align:"center"},(0,o.kt)("strong",{parentName:"th"},"JVM Heap")),(0,o.kt)("th",{parentName:"tr",align:"center"},(0,o.kt)("strong",{parentName:"th"},"JVM Direct")),(0,o.kt)("th",{parentName:"tr",align:"center"},(0,o.kt)("strong",{parentName:"th"},"Host Physical/RAM")))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("strong",{parentName:"td"},"Minimum ( default ) ")),(0,o.kt)("td",{parentName:"tr",align:"center"},"2703MB"),(0,o.kt)("td",{parentName:"tr",align:"center"},"2703MB"),(0,o.kt)("td",{parentName:"tr",align:"center"},"8GB")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("strong",{parentName:"td"},"Maximum")),(0,o.kt)("td",{parentName:"tr",align:"center"},"4GB"),(0,o.kt)("td",{parentName:"tr",align:"center"},"(host physical/RAM * 2/3) - JVM max heap"),(0,o.kt)("td",{parentName:"tr",align:"center"},"no limit")))),(0,o.kt)("h3",{id:"disk-space"},"Disk Space"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Application Directory")," - The size of this directory varies slightly each release. It currently around 330 MB. It is\nnormal to have multiple application directories installed on the same host over time as repository manager is upgraded."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Data Directory")," - On first start, repository manager creates the base files needed to operate. The bulk of disk space\nwill be held by our deployed and proxied artifacts, as well as any search indexes. This is highly installation\nspecific, and will be dependent on the repository formats used, the number of artifacts stored, the size of our teams\nand projects, etc.  It's best to plan for a lot though, formats like Docker and Maven can use very large amounts of\nstorage (500Gb easily).  ",(0,o.kt)("strong",{parentName:"p"},"When available disk space drops below 4GB the database will switch to read-only mode"),"."),(0,o.kt)("h2",{id:"concepts"},"Concepts"),(0,o.kt)("p",null,"The Nexus Repository Manager OSS is all about working with ",(0,o.kt)("strong",{parentName:"p"},"components")," and ",(0,o.kt)("strong",{parentName:"p"},"repositories"),"."),(0,o.kt)("h3",{id:"components"},"Components"),(0,o.kt)("p",null,"A component is a resource like a library or a framework that is used as part of a software application at run-time,\nintegration or unit test execution time or required as part of build process. It could be an entire application or a\nstatic resource like an image."),(0,o.kt)("p",null,"Typically these components are archives of a large variety of files, such as Java bytecode in class files, text files,\nor binary files such as images, PDFs, and music files. The archives have numerous formats such as JAR, WAR, ZIP, NPM\npackages, or .sh"),(0,o.kt)("p",null,"Components can be composed of multiple, nested components themselves. For example, consider a Java web application\npackaged as a WAR component. It contains a number of JAR components and a number of JavaScript libraries. All of these\nare standalone components in other contexts and happend to be included as part of the WAR component."),(0,o.kt)("p",null,"Components provide all the building blocks and features that allow a development team to create powerful applications\nby assembling them and adding their own business related components to create a full-fledged, powerful application."),(0,o.kt)("p",null,"Components, in other tool-chains, are called artifacts, packages, bundles, archives, and other terms. The concept and\nidea, however, remain the same and component is used as the independent, generic term."),(0,o.kt)("h3",{id:"repository"},"Repository"),(0,o.kt)("p",null,"A wide variety of components exists and more are continuously created by the open source community as well as\nproprietary vendors. These are libraries and frameworks written in various languages on different platforms that are\nused for application development every day. It has become a default pattern to build applications by combining the\nfeatures of multiple components with our own custom components containing our application code to create an application\nfor a specific domain"),(0,o.kt)("p",null,"In order to ease the consumption and usage of components, they are aggregated into collection of components. These are\ncalled ",(0,o.kt)("strong",{parentName:"p"},"repositories")," and are typically available on the internet as a service. On different platforms terms such as\nregistry and others are used for the same concept."),(0,o.kt)("p",null,"Examples for such repositories are"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the Central Repository, also known as Maven Central"),(0,o.kt)("li",{parentName:"ul"},"the NuGet Gallery"),(0,o.kt)("li",{parentName:"ul"},"RubyGems.org"),(0,o.kt)("li",{parentName:"ul"},"npmjs.org")),(0,o.kt)("p",null,"Components in these repositories are accessed by numerous tools including"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"package managers like npm, nuget or gem"),(0,o.kt)("li",{parentName:"ul"},"build tools such as Maven, Gradle, rake or grunt"),(0,o.kt)("li",{parentName:"ul"},"IDE's such as Eclipse and IntelliJ")),(0,o.kt)("h3",{id:"repository-format"},"Repository Format"),(0,o.kt)("p",null,"The different repositories use different technologies to store and expose the components in them to client tools. This\ndefines a repository format and as such is closely related to the tools interacting with the repository."),(0,o.kt)("p",null,"For example, the Maven repository format relies on a specific directory structure defined by the identifiers of the\ncomponents and a number of XML formatted files for metadata. Component interaction is performed via plain HTTP commands\nand some additional custom interaction with the XML files."),(0,o.kt)("p",null,"Other repositories formats use database for storage and REST API interactions, or different directory structures wit\nformat specific files for the metadata"),(0,o.kt)("h2",{id:"repository-management"},"Repository Management"),(0,o.kt)("p",null,"We've seen that repositories are the containers for the components provided to our users. Creating and managing\nrepositories is an essential part of our Nexus Repository configuration, since it allows us to expose more components to\nour users. It supports proxy repositories, hosted repositories and repository groups in a number of different repository\nformats."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To manage repositories select the ",(0,o.kt)("strong",{parentName:"p"},"Repositories")," item in the Repository sub menu of the ",(0,o.kt)("strong",{parentName:"p"},"Administration")," menu.")),(0,o.kt)("p",null,"The binary parts of a repository are stored in ",(0,o.kt)("strong",{parentName:"p"},"blob stores"),", which can be configured by selecting Blob Stores from\nthe Repository sub menu of the Administration menu."),(0,o.kt)("h3",{id:"repository-types"},"Repository Types"),(0,o.kt)("h4",{id:"proxy-repository"},"Proxy Repository"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"A repository with the type proxy, also known as a proxy repository, is a repository that is linked to a remote\nrepository"),". Any request for a component is verified against the local content of the proxy repository. If no local\ncomponent is found, the request is forwarded to the remote repository. The component is then retrieved and stored\nlocally in the repository manager, which acts as a cache. Subsequent requests for the same component are then fulfilled\nfrom the local storage, therefore eliminating the network bandwidth and time overhead of retrieving the component from\nthe remote repository again."),(0,o.kt)("p",null,"By default, the repository manager ships with the following configured proxy repositories:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"maven-central")," This proxy repository accesses the Central Repository, formerly known as Maven Central. It is the\ndefault component repository built into Apache Maven"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"nuget.org-proxy")," This proxy repository accesses the ",(0,o.kt)("a",{parentName:"li",href:"https://www.nuget.org/"},"NuGet Gallery"),". It is the default\ncomponent repository used by the ",(0,o.kt)("inlineCode",{parentName:"li"},"nuget")," package management tool used for .Net development.")),(0,o.kt)("h4",{id:"hosted-repository"},"Hosted Repository"),(0,o.kt)("p",null,"A repository with the type hosted, also known as a ",(0,o.kt)("strong",{parentName:"p"},"hosted repository"),", is a repository that stores components in the\nrepository manager as the authoritative location for these components."),(0,o.kt)("p",null,"By default, the repository manager ships with the following configured hosted repositories:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"maven-releases")," This hosted repository uses the maven2 repository format with a release version policy. It is\nintended to be the repository where an organization publishes internal releases. We can also use this repository for\nthird-party components that are not available in external repositories and can therefore not be retrieved via a\nconfigured proxy repository. Examples of these components could be commercial, proprietary libraries such as an Oracle\nJDBC driver that may be referenced by the organization."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"maven-snapshots")," This hosted repository uses the maven2 repository format with a snapshot version policy. It is\nintended to be the repository where the organization publishes internal development versions, also known as snapshots."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"nuget-hosted"),"  This hosted repository is where the organization can publish internal releases in repository using\nthe nuget repository format. We can also use this repository for third-party components that are not available in\nexternal repositories, that could potentially be proxied to gain access to the components.")),(0,o.kt)("h4",{id:"repository-group"},"Repository Group"),(0,o.kt)("p",null,"A repository with the type group, also known as ",(0,o.kt)("strong",{parentName:"p"},"repository group"),", represents a powerful feature of Nexus Repository\nManager. They allow us to combine multiple repositories and other repository groups in a single repository. This in turn\nmeans that our users can rely on a single URL for their configuration needs, while the administrators can add more\nrepositories and therefore components to the repository group."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"When a user is given a privilege to a group repository, then that user will also have that privilege to all transitive\nmembers of that group repository ",(0,o.kt)("strong",{parentName:"p"},"only when their request is directed to the group repository"),". Direct requests to\nindividual member repositories will only work if the user is given explicit permission to the individual repository.")),(0,o.kt)("p",null,"The repository manager ships with the following groups:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"maven-public")," The maven-public group is a repository group of maven2 formatted repositories and combines the\nimportant ",(0,o.kt)("strong",{parentName:"li"},"external proxy repository for the Central Repository")," with the hosted repositories ",(0,o.kt)("strong",{parentName:"li"},"maven-releases")," and\nmaven-snapshots. This allows us to ",(0,o.kt)("em",{parentName:"li"},"expose the components of the Central Repository as well as our internal\ncomponents in one single, simple-to-use repository")," and therefore URL."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"nuget-group")," This group combines the nuget formatted repositories nuget-hosted and nuget.org-proxy into a single\nrepository for .Net development with NuGet.")),(0,o.kt)("h3",{id:"managing-repositories-and-repository-groups"},"Managing Repositories and Repository Groups"),(0,o.kt)("p",null,"TBA"),(0,o.kt)("h4",{id:"setting-up-maven-repositories"},"Setting Up Maven Repositories"),(0,o.kt)("p",null,"Historically Nexus Repository Manager started as a repository manager supporting the Maven repository format and it\ncontinues to include excellent support for users of Apache Maven."),(0,o.kt)("h3",{id:"maven-repository-format-overview"},"Maven Repository Format Overview"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Looking at the Maven repository format and associated concepts and ideas allows us to grasp some of the details and\nintricacies involved with different tools and repository formats, that will help us appreciate the need for repository\nmanagement.")),(0,o.kt)("p",null,"Maven developers are familiar with the concept of a repository, since repositories are used by default. The primary type\nof a binary component in a Maven format repository is a JAR file containing Java byte-code. This is due to the Java\nbackground of Maven and the fact that the default component type is a JAR. Practically however, there is no limit to\nwhat type of component can be stored in a Maven repository. For example, we can easily deploy WAR or EAR files, source\narchives, Flash libraries and applications, Android archives or applications or Ruby libraries to a Maven repository."),(0,o.kt)("p",null,"Every software component is described by an XML document called a Project Object Model (POM). This POM contains\ninformation that describes a project and lists a project\u2019s dependencies - the binary software components, which a given\ncomponent depends upon for successful compilation or execution."),(0,o.kt)("p",null,"When Maven downloads a component like a dependency or a plugin from a repository, it also downloads that component's\nPOM. ",(0,o.kt)("em",{parentName:"p"},"Given a component's POM, Maven can then download any other components that are required by that component"),"."),(0,o.kt)("p",null,"Maven, which interacts with a Maven repository to search for binary software components, model the projects they manage\nand retrieve software components on-demand from a repository."),(0,o.kt)("h4",{id:"the-central-repository"},"The Central Repository"),(0,o.kt)("p",null,"When we download and install Maven without any customization, it retrieves components from the Central Repository. It\nserves millions of Maven users every single day. It is the default, built-in repository using the Maven repository\nformat and is ",(0,o.kt)("em",{parentName:"p"},"managed by Sonatype"),". We can also view statistics about the size of the Central Repository\n",(0,o.kt)("a",{parentName:"p",href:"https://search.maven.org/stats"},"online"),"."),(0,o.kt)("p",null,"The Central Repository is the largest repository for Java-based components. It can be easily used from other build tools\nas well. One can look at the Central Repository as an example of how Maven repositories operate and how they are\nassembled. Here are some of the properties of release repositories such as the Central Repository:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Component Metadata")," All software components added to the Central Repository require proper metadata, including a\nProject Object Model (POM) for each component that describes the component itself and any dependencies that software\ncomponent might have."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Release Stability")," Once published to the Central Repository, a component and the metadata describing that component\nnever change. This property of a release repository, like the Central Repository,  guarantees that projects that\ndepend on releases will be repeatable and stable over time. While new software components are being published every\nday, once a component is assigned a release number on the Central Repository, there is a strict policy against\nmodifying the contents of a software component after a release."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Component Security")," The Central Repository contains cryptographic hashes and PGP signatures that can be used to\nverify the authenticity and integrity of software components served and supports connections in a secure manner via\n",(0,o.kt)("strong",{parentName:"li"},"HTTPS"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Performance")," The Central Repository is exposed to the users globally via a high performance content delivery\nnetwork of servers.")),(0,o.kt)("p",null,"In addition to the Central Repository, there are a number of major organizations, such as Red Hat, Oracle or the Apache\nSoftware foundation, which maintain separate additional repositories. Best practice to facilitate these available\nrepositories with Nexus Repository Manager OSS is to proxy and cache the contents on our own network."),(0,o.kt)("h4",{id:"component-coordinates-and-the-repository-format"},"Component Coordinates and the Repository Format"),(0,o.kt)("p",null,"Component coordinates create a unique identifier for a component. Maven coordinates use the following values: groupId,\nartifactId, version, and packaging. This set of coordinates is often referred to as a ",(0,o.kt)("strong",{parentName:"p"},"GAV coordinate"),", which is short\nfor Group, Artifact, Version coordinate. The GAV coordinate standard is the foundation for Maven's ability to manage\ndependencies. Four elements of this coordinate system are described below:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"groupId")," A group identifier groups a set of components into a logical group. Groups are often designed to reflect\nthe ",(0,o.kt)("strong",{parentName:"li"},"organization"),' under which a particular software component is being produced. For example, software components\nproduced by the Maven project at the Apache Software Foundation are available under the groupId "org.apache.maven"'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"artifactId")," An artifactId is an identifier for a software component and should be a descriptive name. The\ncombination of groupId and artifactId must be unique for a specific project."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"version")," The version of a project ideally follows the established convention of\n",(0,o.kt)("a",{parentName:"li",href:"http://semver.org/"},(0,o.kt)("strong",{parentName:"a"},"semantic versioning")),". For example, if our simple-library component has a major release\nversion of 1, a minor release version of 2 and point release version of 3, the version would be 1.2.3. Versions can\nalso have ",(0,o.kt)("strong",{parentName:"li"},"alphanumeric qualifiers"),' which are often used to denote release status. An example of such a qualifier\nwould be a version like "1.2.3-BETA" where BETA signals a stage of testing meaningful to consumers of a software\ncomponent.'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"packaging")," Maven was initially created to handle JAR files, but a Maven repository is completely agnostic about the\ntype of component it is managing. Packaging can be anything that describes any binary software format including: zip,\nnar, war, ear, sar and aar.")),(0,o.kt)("p",null,'Tools designed to interact Maven repositories translate component coordinates into a URL which corresponds to a location\nin a Maven repository. If a tool such as Maven is looking for version "1.2.0" of the "commons-lang" JAR in the group\n"org.apache.commons", this request is translated into:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"<repoURL>/org/apache/commons/commons-lang/1.2.0/commons-lang-1.2.0.jar\n")),(0,o.kt)("p",null,'Maven also downloads the corresponding POM for "commons-lang 1.2.0" from:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"<repoURL>/org/apache/commons/commons-lang/1.2.0/commons-lang-1.2.0.pom\n")),(0,o.kt)("p",null,"This POM may contain references to other components, which are then retrieved from the same repository using the same\nURL patterns."),(0,o.kt)("h4",{id:"release-and-snapshot-repositories"},"Release and Snapshot Repositories"),(0,o.kt)("p",null,"A Maven repository stores two types of components:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Release repositories"),' are for stable, static release components. A release component is a component which was\ncreated by a specific, versioned release. For example, consider the "1.2.0" release of the "commons-lang" library\nstored in the Central Repository. This release component, "commons-lang-1.2.0.jar", and the associated POM,\n"commons-lang-1.2.0.pom", are static objects which will never change in the Central Repository. Released components\nare considered to be solid, stable and perpetual in order to guarantee that builds which depend upon them are\nrepeatable over time. The released JAR component is associated with a PGP signature, an MD5, and a SHA check-sum\nwhich can be used to verify both the authenticity and integrity of the binary software component.'),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Snapshot repositories"),' are frequently updated repositories that store binary software components from projects\nunder constant development. Snapshot components are components generated during the development of a software\nproject. A Snapshot component has both a version number such as "1.3.0" or "1.3" and a timestamp in its name. For\nexample, a snapshot component for "commons-lang 1.3.0" might have the name\n"commons-lang-1.3.0.-20090314.182342-1.jar". The associated POM, MD5 and SHA hashes would also have a similar name.\nTo facilitate collaboration during the development of software components, Maven and other clients that know how to\nconsume snapshot components from a repository also know how to interrogate the metadata associated with a Snapshot\ncomponent to retrieve the latest version of a Snapshot dependency from a repository.')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"While it is possible to create a repository which serves both release and snapshot components, repositories are\nusually segmented into release or snapshot repositories serving different consumers and maintaining different standards\nand procedures for deploying components"),". Much like the difference between networks, a release repository is considered\nlike a production network and a snapshot repository is more like a development or a testing network. While there is a\nhigher level of procedure and ceremony associated with deploying to a release repository, snapshot components can be\ndeployed and changed frequently without regard for stability and repeatability concerns."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"A project under active development produces snapshot components that change over time. A release is comprised of\ncomponents which will remain unchanged over time.")),(0,o.kt)("h3",{id:"version-policy"},"Version policy"),(0,o.kt)("p",null,"Every repository has one of the 3 ",(0,o.kt)("strong",{parentName:"p"},"version policies")," configured:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Release")," A Maven repository can be configured to be suitable for release components with the Release version\npolicy. The Central Repository uses a release version policy."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Snapshot")," Continuous development is typically performed with snapshot versions supported by the Snapshot version\npolicy. These version values have to ",(0,o.kt)("strong",{parentName:"li"},"end with -SNAPSHOT in the POM file"),". This allows repeated uploads where the\nactual number used is composed of a date/timestamp and an enumerator and the retrieval can still use the -SNAPSHOT\nversion string. The repository manager and client tools manage the metadata files that manage this translation from\nthe snapshot version to the timestamp value."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Mixed")," The Mixed version policy allows us to support both approaches within one repository.")),(0,o.kt)("h3",{id:"hosting-maven-repositories"},"Hosting Maven Repositories"),(0,o.kt)("p",null,"A hosted Maven repository can be used to deploy our own as well as third-party components. A default installation of\nNexus Repository Manager includes two hosted Maven repositories. The ",(0,o.kt)("strong",{parentName:"p"},"maven-releases")," repository uses a release\nversion policy and the ",(0,o.kt)("strong",{parentName:"p"},"maven-snapshots")," repository uses a snapshot version policy."),(0,o.kt)("h4",{id:"using-repository-manager-with-apache-maven"},"Using Repository Manager with Apache Maven"),(0,o.kt)("p",null,"To use repository manager with ",(0,o.kt)("a",{parentName:"p",href:"http://maven.apache.org/"},"Apache Maven"),", configure Maven to check the repository manager\ninstead of the default, built-in connection to the Central Repository."),(0,o.kt)("p",null,'To do this, we add a mirror configuration and override the default configuration for the central repository in our\n"~/.m2/settings.xml", shown below:'),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},'Replace the "nexus-host" with the NDS address pointing to the actual Nexus instance.')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<settings>\n  <mirrors>\n    <mirror>\n      \x3c!--This sends everything else to /public --\x3e\n      <id>nexus</id>\n      <mirrorOf>*</mirrorOf>\n      <url>https://nexus-host/repository/maven-public/</url>\n    </mirror>\n  </mirrors>\n\n  <profiles>\n    <profile>\n      <id>nexus</id>\n      \x3c!--Enable snapshots for the built in central repo to direct --\x3e\n      \x3c!--all requests to nexus via the mirror --\x3e\n      <repositories>\n        <repository>\n          <id>central</id>\n          <url>http://central</url>\n          <releases><enabled>true</enabled></releases>\n          <snapshots><enabled>true</enabled></snapshots>\n        </repository>\n      </repositories>\n     <pluginRepositories>\n        <pluginRepository>\n          <id>central</id>\n          <url>http://central</url>\n          <releases><enabled>true</enabled></releases>\n          <snapshots><enabled>true</enabled></snapshots>\n        </pluginRepository>\n      </pluginRepositories>\n    </profile>\n  </profiles>\n\n  <activeProfiles>\n    \x3c!--make the profile active all the time --\x3e\n    <activeProfile>nexus</activeProfile>\n  </activeProfiles>\n</settings>\n")),(0,o.kt)("p",null,"In the configuration above, a single profile called ",(0,o.kt)("strong",{parentName:"p"},"nexus")," is defined. It configures a repository and a\npluginRepository with the id ",(0,o.kt)("strong",{parentName:"p"},"central")," that overrides the same repositories in the Super POM. The ",(0,o.kt)("em",{parentName:"p"},"Super POM")," is\ninternal to every Apache Maven install and establishes default values. These overrides are important since they change\nthe repositories by enabling snapshots and replacing the URL with a bogus URL. This URL is overridden by the ",(0,o.kt)("strong",{parentName:"p"},"mirror"),"\nsetting in the same settings.xml file to point to the URL of our single repository group. This repository group can,\ntherefore, contain release as well as snapshot components and Maven will pick them up."),(0,o.kt)("p",null,"In addition, The ",(0,o.kt)("strong",{parentName:"p"},"mirrorOf")," pattern of ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," causes any repository request to be redirected to this mirror and to our\nsingle repository group, which in the example is the public group."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},'It is possible to use other patterns in the "mirrorOf" field. A possible valuable setting is to use ',(0,o.kt)("strong",{parentName:"p"},"external:*"),'.\nThis matches all repositories except those using "localhost" or file based repositories. This is used in conjunction\nwith a repository manager when you want to exclude redirecting repositories that are defined for integration testing.\nThe integration test runs for Apache Maven itself require this setting.'),(0,o.kt)("p",{parentName:"admonition"},"More documentation about mirror settings can be found in the\n",(0,o.kt)("a",{parentName:"p",href:"http://maven.apache.org/guides/mini/guide-mirror-settings.html"},"mini guide on the Maven web site"),".")),(0,o.kt)("p",null,'Deployment to a repository is configured in the pom.xml for the respective project in the "distributionManagement"\nsection. Using the default repositories of the repository manager:'),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},'Replace the "nexus-host" with the NDS address pointing to the actual Nexus instance.')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n...\n<distributionManagement>\n    <repository>\n      <id>nexus</id>\n      <name>Releases</name>\n      <url>https://nexus-host/repository/maven-releases</url>\n    </repository>\n    <snapshotRepository>\n      <id>nexus</id>\n      <name>Snapshot</name>\n      <url>https://nexus-host/repository/maven-snapshots</url>\n    </snapshotRepository>\n  </distributionManagement>\n...\n")),(0,o.kt)("p",null,'The credentials used for the deployment are found in the "server" section of the settings.xml. In the example below\nserver contains "nexus" as the id, along with the default username and password:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<settings>\n....\n  <servers>\n    <server>\n      <id>nexus</id>\n      <username>admin</username>\n      <password>admin123</password>\n    </server>\n  </servers>\n")),(0,o.kt)("p",null,"A full build of project, including downloading the declared dependencies and uploading the build output to the\nrepository manager can be invoked with ",(0,o.kt)("inlineCode",{parentName:"p"},"mvn clean deploy"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"For startup who doesn't really need to proxy the entire Maven Central at the moment, another approach is to set up\nmultiple repositories. In each project they are working on, they will still fetch everything from Maven Central except\nfor their hosted component from Nexus"),(0,o.kt)("p",{parentName:"admonition"},"There are two different ways that we can specify the use of multiple repositories. The first way is to specify in a POM\nwhich repositories we want to use. That is supported both inside and outside of build profiles:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n    ...\n\n    <repositories>\n        <repository>\n            <id>my-repo1</id>\n            <name>your custom repo</name>\n            <url>http://jarsm2.dyndns.dk</url>\n        </repository>\n        <repository>\n            <id>my-repo2</id>\n            <name>your custom repo</name>\n            <url>http://jarsm2.dyndns.dk</url>\n        </repository>\n    </repositories>\n\n    ...\n</project>\n")),(0,o.kt)("p",{parentName:"admonition"},"The other way we can specify multiple repositories is by creating a profile in the ",(0,o.kt)("inlineCode",{parentName:"p"},"${user.home}/.m2/settings.xml")," or\n",(0,o.kt)("inlineCode",{parentName:"p"},"${maven.home}/conf/settings.xml")," file like the following:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<settings>\n    ...\n    <profiles>\n        ...\n        <profile>\n            <id>myprofile</id>\n            <repositories>\n                <repository>\n                    <id>my-repo2</id>\n                    <name>your custom repo</name>\n                    <url>http://jarsm2.dyndns.dk</url>\n                </repository>\n            </repositories>\n        </profile>\n        ...\n    </profiles>\n\n     <activeProfiles>\n         <activeProfile>myprofile</activeProfile>\n     </activeProfiles>\n     ...\n</settings>\n")),(0,o.kt)("p",{parentName:"admonition"},"If we specify repositories in profiles we must remember to activate that particular profile. As we can see above we do\nthis by registering a profile to be active in the ",(0,o.kt)("inlineCode",{parentName:"p"},"activeProfiles")," element."),(0,o.kt)("p",{parentName:"admonition"},"We could also activate this profile on the command like by executing the following command:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mvn -Pmyprofile ...\n")),(0,o.kt)("p",{parentName:"admonition"},"In fact the ",(0,o.kt)("inlineCode",{parentName:"p"},"-P")," option will take a CSV list of profiles to activate if we wish to activate multiple profiles\nsimultaneously."),(0,o.kt)("p",{parentName:"admonition"},"The settings descriptor documentation can be found on the\n",(0,o.kt)("a",{parentName:"p",href:"https://maven.apache.org/maven-settings/settings.html"},"Maven Local Settings Model Website"),".")),(0,o.kt)("p",null,"Remote repository URLs are queried in the following order for artifacts until one returns a valid result:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Global settings.xml"),(0,o.kt)("li",{parentName:"ol"},"User settings.xml"),(0,o.kt)("li",{parentName:"ol"},"Local pom.xml"),(0,o.kt)("li",{parentName:"ol"},"Parent POMs, recursively"),(0,o.kt)("li",{parentName:"ol"},"Super POM"),(0,o.kt)("li",{parentName:"ol"},"effective POMs from dependency path to the artifact.")),(0,o.kt)("p",null,"For each of these locations, the repositories within the profiles are queried first in the order outlined at\n",(0,o.kt)("a",{parentName:"p",href:"https://maven.apache.org/guides/introduction/introduction-to-profiles.html"},"Introduction to build profiles"),"."),(0,o.kt)("p",null,"Before downloading from a repository,\n",(0,o.kt)("a",{parentName:"p",href:"https://maven.apache.org/guides/mini/guide-mirror-settings.html"},"mirrors configuration")," is applied."),(0,o.kt)("p",null,"Effective settings and local build POM, with profile taken into account, can easily be reviewed to see their\nrepositories order with ",(0,o.kt)("inlineCode",{parentName:"p"},"mvn help:effective-settings")," and mvn ",(0,o.kt)("inlineCode",{parentName:"p"},"help:effective-pom -Dverbose"),"."),(0,o.kt)("h3",{id:"setting-up-docker-registry"},"Setting Up Docker Registry"),(0,o.kt)("p",null,"Docker containers and their usage have revolutionized the way applications and the underlying operating system are\npackaged and deployed to development, testing and production systems. The creation of the\n",(0,o.kt)("a",{parentName:"p",href:"https://opencontainers.org/"},"Open Container Initiative"),", and the involvement of a large number of stakeholders,\nguarantees that the ecosystem of tools around the lightweight containers and their usage will continue to flourish.\n",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/"},"Docker Hub")," is the original registry for Docker container images and it is being joined by\nmore and more other publicly available registries such as the\n",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/container-registry/"},"Google Container Registry")," and others."),(0,o.kt)("p",null,"Nexus Repository Manager OSS support Docker registries as the Docker repository format for ",(0,o.kt)("strong",{parentName:"p"},"hosted")," and ",(0,o.kt)("strong",{parentName:"p"},"proxy"),"\nrepositories. We can expose these repositories to the client-side tools directly or as a\n",(0,o.kt)("a",{parentName:"p",href:"#repository-group"},"repository group"),", which is a repository that merges and exposes the contents of multiple\nrepositories in one convenient URL. This allows us to reduce time and bandwidth usage for accessing Docker images in a\nregistry as well as share our images within our organization in a hosted repository. Users can then launch containers\nbased on those images, resulting in a completely private Docker registry with all the features available in the\nrepository manager."),(0,o.kt)("h4",{id:"docker-port-scalability"},"Docker Port Scalability"),(0,o.kt)("p",null,"The Docker client has strict requirements about how it can retrieve content from a repository (i.e., a registry). These\nrequirements mainly center around the path at which it expects everything to be hosted."),(0,o.kt)("p",null,"While it is possible to tell the Docker client to use a chosen host from which to retrieve (or to which to upload)\nimages, it is not possible to tell it to use an arbitrary base path where images are stored in a registry."),(0,o.kt)("p",null,"To further explain, the Docker client is given a registry to contact by specifying only the hostname + port. It's also\ngiven a specific path to an image in that registry. So, for example, it would be given\n",(0,o.kt)("inlineCode",{parentName:"p"},"example:443/some/custom/image")," to specify an image. We are not able to specify a registry application path."),(0,o.kt)("p",null,"Nexus Repository exposes its Docker registries with a repository path of ",(0,o.kt)("inlineCode",{parentName:"p"},"/repository/<repo_name>/")," and, by default, and\napplication context path of ",(0,o.kt)("inlineCode",{parentName:"p"},"/"),"."),(0,o.kt)("p",null,'So, a full Docker image in the repository "docker-hosted" might be accessible at full URL\n"example:443/nexus3/repository/docker-hosted/some/custom/image", which can be broken down as follows:'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"example.com")," = host name"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"443")," = port"),(0,o.kt)("li",{parentName:"ul"},"/nexus3 = application context path"),(0,o.kt)("li",{parentName:"ul"},"/repository/docker-hosted = base registry path"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"/some/custom/image")," = specific image path in the registry")),(0,o.kt)("p",null,"There is no way to give the Docker client the application context path or base registry path. Docker needs the registry\nexposed at the root of the host + port that it is accessing."),(0,o.kt)("p",null,"This is important because Nexus Repository uses request paths to separate content between different repositories. There\nare a few potential ways to overcome this Docker limitation:"),(0,o.kt)("h3",{id:"access-control"},"Access Control"),(0,o.kt)("p",null,"Nexus Repository uses ",(0,o.kt)("strong",{parentName:"p"},"role-based access contro"),"l (",(0,o.kt)("strong",{parentName:"p"},"RBAC"),") to give administrators fine-grained control over user\nrights to the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Access to the Nexus Repository web application"),(0,o.kt)("li",{parentName:"ul"},"Read access to a component path in a repository"),(0,o.kt)("li",{parentName:"ul"},"Administator access to configuration"),(0,o.kt)("li",{parentName:"ul"},"Publish or upload files to a repository")),(0,o.kt)("p",null,"The default configuration ships with the administrator role and optional anonymous access to browse and read all\nrepositories. ",(0,o.kt)("strong",{parentName:"p"},"We should not use the default anonymous role if we need to create protected repositories"),"."),(0,o.kt)("h3",{id:"realms"},"Realms"),(0,o.kt)("admonition",{title:"What Is a Realm?",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"A realm is a security policy domain defined for a web or application server. The protected resources on a server can be\npartitioned into a set of protection spaces, ",(0,o.kt)("strong",{parentName:"p"},"each with its own authentication scheme")," and/or authorization database\ncontaining a collection of users and groups.")),(0,o.kt)("p",null,"The realms can be accessed via the ",(0,o.kt)("strong",{parentName:"p"},"Realms")," menu item located under ",(0,o.kt)("strong",{parentName:"p"},"Security"),", in the Administration main menu."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-realms.png",src:n(4659).Z,width:"1262",height:"770"})),(0,o.kt)("p",null,"Effectively, the configuration shown above determines what authentication realm is used to grant a user access and the\norder the realms are used."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Local Authenticating Realm and Local Authorizing Realm")," These are the built-in realms used by default. They allow\nthe repository manager to manage security setup without additional external systems. Sonatype recommends keeping the\nLocal realms at the top of the active list.  In the event of system recovery, if we have them lower in the order (or\nremoved), restoration may be more difficult.")),(0,o.kt)("h3",{id:"privileges"},"Privileges"),(0,o.kt)("p",null,"Privileges define actions which can be performed against specific functionality. Privileges can only be assigned to\nroles."),(0,o.kt)("p",null,"To access Privileges go to ",(0,o.kt)("strong",{parentName:"p"},"Security")," in the Administration menu, where it's listed as a sub-section. An extensive\nlist of privileges is already built in the repository manager and is partially shown in the figure below"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-privileges-partial-list.png",src:n(2759).Z,width:"749",height:"274"})),(0,o.kt)("p",null,"This feature allows us to inspect existing privileges and create custom privileges as required. Users will need\n",(0,o.kt)("em",{parentName:"p"},"nx-privilege")," or ",(0,o.kt)("em",{parentName:"p"},"nx-all")," privileges to access this page."),(0,o.kt)("h4",{id:"privilege-names"},"Privilege Names"),(0,o.kt)("p",null,"Names are unique identifiers. Privileges included by default are prefixed with ",(0,o.kt)("strong",{parentName:"p"},"nx-")," . Privileges that are migrated\nfrom Nexus Repository 2 will be named as they were in Repository 2. Privileges that we create ourselves can only consist\nof letters, digits, underscores(",(0,o.kt)("inlineCode",{parentName:"p"},"_"),"), hyphens(",(0,o.kt)("inlineCode",{parentName:"p"},"-"),"), and dots(",(0,o.kt)("inlineCode",{parentName:"p"},"."),"). A privilege name cannot start with an underscore or\ndot."),(0,o.kt)("p",null,"For custom privileges, it is encouraged that we use a ",(0,o.kt)("strong",{parentName:"p"},"simple convention"),' to namespace our privileges. For example\nusing a simple acronym representing our organization name. "Example Organization Inc." could prefix its privilege names\nwith ',(0,o.kt)("strong",{parentName:"p"},"eoi-")," for example."),(0,o.kt)("h4",{id:"privilege-types"},"Privilege Types"),(0,o.kt)("p",null,"The privilege list displays an icon for the privilege Type as the first column in the list:"),(0,o.kt)("admonition",{title:"Privilege Permissions",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Privilege permissions are represented by a colon separated list of text segments, where each segment can be one of:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"a single text value"),(0,o.kt)("li",{parentName:"ul"},"a comma separated list of text values"),(0,o.kt)("li",{parentName:"ul"},"an asterisk character * to represent all values in that segment")),(0,o.kt)("p",{parentName:"admonition"},"The internal segment matching algorithm uses\n",(0,o.kt)("a",{parentName:"p",href:"https://shiro.apache.org/permissions.html"},"Apache Shiro wildcard permissions"),".")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"application (nexus:{name}:{actions})"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Applicable Actions: create, read, update, delete"),(0,o.kt)("li",{parentName:"ul"},"Description: Application type privileges are most commonly the built-in privileges that control access to specific\nproduct feature areas in the Administration ",(0,o.kt)("strong",{parentName:"li"},"UI"),'. For example, "nexus:blobstores:create,read" means allowing for\ncreating and reading blobstores'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"repository-admin (nexus:repository-admin:{format}:{repository}:{actions})"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Applicable Actions: browse,read,edit,add,delete"),(0,o.kt)("li",{parentName:"ul"},"Description: Repository Admin privileges control administration of ",(0,o.kt)("strong",{parentName:"li"},"configuration"),' for specific repositories or\nrepository formats. For example, "nexus:repository-admin:nuget:nuget.org-proxy:browse,read" means allowing viewing\nof the repository configuration for the nuget format repository named "nuget.org-proxy". ',(0,o.kt)("strong",{parentName:"li"},"These privileges do not\ncontrol access to repository content.")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"repository-content-selector (nexus:repository-content-selector:{selector}:{format}:{repository}:{actions})"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Applicable Actions: browse,read,edit,add,delete"),(0,o.kt)("li",{parentName:"ul"},'Description: Repository Content Selector privileges provide fine-grained control over access to content within a\nrepository by way of a content selector. For example, "nexus:repository-content-selector:',(0,o.kt)("em",{parentName:"li"},":maven2:"),':read" means\nallowing a user for read access to any content matching a content selector defined for the maven2 format.'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"repository-view (nexus:repository-view:{format}:{repository}:{actions})"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Applicable Actions: browse,read,edit,add,delete"),(0,o.kt)("li",{parentName:"ul"},'Description: Repository View privileges control general access to all content contained within specific repositories\nor repository formats. For example, "nexus:repository-view:maven2:central:browse,read" means allow browsing and\nviewing content within the maven2 format repository named central. ',(0,o.kt)("strong",{parentName:"li"},"These privileges do not allow changing\nconfiguration of a repository.")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"script (nexus:script:{script name}:{actions})"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Applicable Actions: browse,read,edit,add,delete,run"),(0,o.kt)("li",{parentName:"ul"},"Description: Script privileges control access to using the Groovy Script related REST APIs as documented in\n",(0,o.kt)("a",{parentName:"li",href:"https://help.sonatype.com/repomanager3/integrations/rest-and-integration-api"},"REST and Integration API"),' . These\nprivileges do not control general REST API access. For example, "nexus:script:*:read" means allowing for read access\nto all scripts of any name. "nexus:script:my-uploaded-script:run" means allowing the calling user for running\n(executing) the script named my-uploaded-script'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"wildcard (",(0,o.kt)("inlineCode",{parentName:"p"},"*"),")"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Applicable Actions: *"),(0,o.kt)("li",{parentName:"ul"},"Description: Wildcard privileges allow one to build a privilege string using a free-form series of segments. All\nother privilege types are more specific segment forms of a wildcard privilege. There is only one wildcard privilege\nincluded by default named ",(0,o.kt)("strong",{parentName:"li"},"nx-all")," with permission ",(0,o.kt)("strong",{parentName:"li"},"nexus:*"),"  that gives access to all functionality.")))),(0,o.kt)("admonition",{title:"Privilege Actions",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Actions are functions allowing an explicit behavior the privilege can perform with the associated function."),(0,o.kt)("p",{parentName:"admonition"},"The Actions to choose from are"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"add")," allows privileges to add repositories or scripts."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"read")," allows privileges to view various configuration lists and scripts. Without ",(0,o.kt)("strong",{parentName:"li"},"read"),", any associated action\nwill permit a privilege to see these lists but not its contents. The ",(0,o.kt)("strong",{parentName:"li"},"read")," action also allows privileges to utilize\ntools that can look at content from the command line."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"browse"),"  allows privileges to view the contents of associated repositories. Unlike ",(0,o.kt)("strong",{parentName:"li"},"read"),", privilege types with\nbrowse can only view and administrate repository ",(0,o.kt)("em",{parentName:"li"},"contents")," from ",(0,o.kt)("em",{parentName:"li"},"UI"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"create")," allows privileges to create applicable configurations within the repository manager. Since a ",(0,o.kt)("strong",{parentName:"li"},"read"),"\npermission is required to view a configuration, this action is associated with most existing create privileges."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"delete")," allows privileges to delete repository manager configurations, repository contents, and scripts. A\n",(0,o.kt)("strong",{parentName:"li"},"read")," action is generally associated with delete actions, so the actor can view these configurations to remove\nthem."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"edit")," allows privileges to modify associated scripts, repository content, and repository administration."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"update")," allows privileges to update repository manager configurations. Most existing privileges with update\ninclude ",(0,o.kt)("strong",{parentName:"li"},"read")," actions. Therefore, if creating custom privileges with update, the actor should consider adding read\nto the privilege in order to view repository manager configuration updates."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"*")),", the wildcard, gives us the ability to group all actions together.")),(0,o.kt)("p",{parentName:"admonition"},"We must assign a single or combination of comma-delimited actions when creating new privileges. The privilege type to\nwhich we apply any of these Actions will perform the action's implied behavior. Consider how each action behaves when\napplied to a privilege type")),(0,o.kt)("h4",{id:"creating-a-privilege"},"Creating a Privilege"),(0,o.kt)("p",null,"Click the ",(0,o.kt)("strong",{parentName:"p"},"Create privilege")," button to view a list of privilege types"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexnus3-privileges-types.png",src:n(9478).Z,width:"502",height:"258"})),(0,o.kt)("p",null,"After selecting a type, fill in the required fields and save the privilege. The privilege can be found listed among the\ndefault privileges on the main ",(0,o.kt)("strong",{parentName:"p"},"Privileges")," screen. We can use the ",(0,o.kt)("strong",{parentName:"p"},"Filter")," input box to find a specific\nprivilege. In the following example, an ",(0,o.kt)("em",{parentName:"p"},"Application")," privilege type is created:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-privileges-application.png",src:n(6909).Z,width:"673",height:"388"})),(0,o.kt)("p",null,"The form provides Name, Description, Domain, and Actions in figure above. The form is completed for a privilege that\nallows read access to the LDAP administration. If assigned this privilege, a user is able to view LDAP administration\nconfiguration but not edit it, create a new LDAP configuration, nor delete any existing LDAP configurations."),(0,o.kt)("p",null,"In another example, a ",(0,o.kt)("em",{parentName:"p"},"Repository View")," privilege type is created:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-privileges-repository-view.png",src:n(1498).Z,width:"638",height:"455"})),(0,o.kt)("p",null,"The form provides Name, Description, Format, Repository, and Actions in figure above. The form is completed for a\nprivilege granting sufficient access to publish images to a specific hosted repository. A user with this privilege can\nview and read the contents of the repository as well as publish new images to it, but not delete images."),(0,o.kt)("h3",{id:"content-selectors"},"Content Selectors"),(0,o.kt)("p",null,"Content selectors provide a means for us to select specific content from all of our content. The content we select is\nevaluated against expressions written in ",(0,o.kt)("strong",{parentName:"p"},"CSEL")," (",(0,o.kt)("strong",{parentName:"p"},"Content Selector Expression Language"),"). CSEL is a light version of\n",(0,o.kt)("strong",{parentName:"p"},"JEXL")," used to script queries along specific paths and coordinates available to our repository manager formats."),(0,o.kt)("p",null,'Content selectors allow us to define what content users are allowed to access. We can define, in a simplified example, a\nselector named "Apache Maven" with a search expression of ',(0,o.kt)("inlineCode",{parentName:"p"},'path =~ "^/org/apache/maven/"'),'. This would match all\ncomponents that start with the designated component path. Another, yet more complete, example would be to "select all\nmaven2 content along a path that starts with ',(0,o.kt)("inlineCode",{parentName:"p"},"org.apache.commons"),'":\n',(0,o.kt)("inlineCode",{parentName:"p"},'format == "maven2" and path =~ "^/org/apache/commons/.*"')),(0,o.kt)("h4",{id:"creating-a-query"},"Creating a Query"),(0,o.kt)("p",null,"Before we identify user permissions for our selector, create the query first. Click ",(0,o.kt)("strong",{parentName:"p"},"Content Selectors")," located in\n",(0,o.kt)("strong",{parentName:"p"},"Repository"),", from the ",(0,o.kt)("strong",{parentName:"p"},"Administration")," menu. Click ",(0,o.kt)("strong",{parentName:"p"},"Create Selector")," to open a new form."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-content-selector-example.png",src:n(3527).Z,width:"1182",height:"1800"})),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"We can preview our selector and what results it will return by clicking the ",(0,o.kt)("strong",{parentName:"p"},"Preview")," results button located somewhere\nin the middle section of the page. Select a repository or grouping of repositories from the ",(0,o.kt)("strong",{parentName:"p"},"Preview Repository"),"\ndropdown and click the ",(0,o.kt)("strong",{parentName:"p"},"Preview")," button. Assets that match will be returned in the space below the filter and can be\nfiltered upon if we wish to check on a specific result.")),(0,o.kt)("p",null,"Once we are satisfied with our fields, click ",(0,o.kt)("strong",{parentName:"p"},"Save")," to create the content selector. All saved selector queries we\ncreate will be listed in the ",(0,o.kt)("strong",{parentName:"p"},"Content Selectors")," screen."),(0,o.kt)("h4",{id:"finer-access-control-with-content-selector-privilege"},'Finer Access Control with "Content Selector privilege"'),(0,o.kt)("p",null,"As part of our security setup, we can create user permissions to manage the filters we built in the ",(0,o.kt)("em",{parentName:"p"},"Create Selector"),"\nform. We can add a new privilege that controls operations of read, edit, delete or * (all) for components matching that\nselector. The privilege can even span multiple repositories."),(0,o.kt)("p",null,"To create a new ",(0,o.kt)("strong",{parentName:"p"},"content selector privilege"),", click ",(0,o.kt)("strong",{parentName:"p"},"Privileges")," in the ",(0,o.kt)("strong",{parentName:"p"},"Security")," section of the\n",(0,o.kt)("strong",{parentName:"p"},"Administration")," panel. Then click the ",(0,o.kt)("strong",{parentName:"p"},"Create privilege")," button. Locate and click ",(0,o.kt)("strong",{parentName:"p"},"Repository Content Selector"),"\nfrom the list of options in ",(0,o.kt)("strong",{parentName:"p"},"Select Privilege Type"),". We will see a form that displays the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Name: Create a name for the content selector privilege."),(0,o.kt)("li",{parentName:"ul"},"Description: Add a brief description for the privilege."),(0,o.kt)("li",{parentName:"ul"},"Content Selector: Use this dropdown to select from a list of selectors we created."),(0,o.kt)("li",{parentName:"ul"},"Repository: Use this dropdown to select from either a range of all repository contents, all repository contents of an\nindividual format, or repositories created by us."),(0,o.kt)("li",{parentName:"ul"},"Actions: Grant read, edit, delete, or * (all) privileges for user access control.")),(0,o.kt)("p",null,"To complete the form, save the new privilege by clicking ",(0,o.kt)("strong",{parentName:"p"},"Create privilege"),". We can use our new privilege to regulate\nwhat permissible data we want the user to access. We could group all related privileges into a ",(0,o.kt)("a",{parentName:"p",href:"#roles"},"role"),".\nUltimately, we could assign our roles to a ",(0,o.kt)("a",{parentName:"p",href:"#users"},"user"),"."),(0,o.kt)("h4",{id:"content-selector-query-reference"},"Content Selector Query Reference"),(0,o.kt)("p",null,"Below are the allowable attributes for content selectors that define path and format as values supported by Nexus\nRepository Manager."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Attribute")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Allowed Values")))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"format"),(0,o.kt)("td",{parentName:"tr",align:null},"The format of the content for which we query")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"path"),(0,o.kt)("td",{parentName:"tr",align:null},"The path of our repository content")))),(0,o.kt)("p",null,"Valid Operators are"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"center"},"Operator"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Definition"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Example"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},"==")),(0,o.kt)("td",{parentName:"tr",align:"center"},"Matches text ",(0,o.kt)("em",{parentName:"td"},"exactly")),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},'format == "maven2"'))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},"=~")),(0,o.kt)("td",{parentName:"tr",align:"center"},"Matches a Java regular expression pattern"),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},'path =~ "^/org/apache/commons/.*"'))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},"=^")),(0,o.kt)("td",{parentName:"tr",align:"center"},"Starts with text."),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},'path =^ "/com/example/"'))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},"and")),(0,o.kt)("td",{parentName:"tr",align:"center"},"Match all expressions"),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},'format == "maven2" and path =~ "^/org/apache/commons/.*"'))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},"or")),(0,o.kt)("td",{parentName:"tr",align:"center"},"Match any expression"),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},'format == "maven2" or format == "npm"'))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},"( expr )")),(0,o.kt)("td",{parentName:"tr",align:"center"},"Group multiple expressions."),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("sup",{parentName:"td",id:"fnref-example-1b726c"},(0,o.kt)("a",{parentName:"sup",href:"#fn-example-1b726c",className:"footnote-ref"},"example")))))),(0,o.kt)("admonition",{title:"Version Range Regular Expressions",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To avoid encountering database errors, we should escape dashes in version range regular expressions. For example,\n",(0,o.kt)("inlineCode",{parentName:"p"},'path =~ "[0-9a-zA-Z\\-_]"'))),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"When writing a content selector, remember that the asset's path will always begin with a leading slash when the selector\nis evaluated. This is true even though the leading slash is not displayed when searching or browsing assets.")),(0,o.kt)("h3",{id:"roles"},"Roles"),(0,o.kt)("p",null,"Roles aggregate ",(0,o.kt)("a",{parentName:"p",href:"#privileges"},"privileges")," into a related context and can, in turn, be grouped to create more complex\nroles."),(0,o.kt)("p",null,"The repository manager ships with a predefined ",(0,o.kt)("em",{parentName:"p"},"admin")," as well as an ",(0,o.kt)("em",{parentName:"p"},"anonymous role"),". These can be inspected in the\n",(0,o.kt)("strong",{parentName:"p"},"Roles")," feature view accessible via the ",(0,o.kt)("strong",{parentName:"p"},"Roles")," item in the ",(0,o.kt)("strong",{parentName:"p"},"Security")," section of the ",(0,o.kt)("strong",{parentName:"p"},"Administration")," main\nmenu. A simple example is shown in figure below. The list displays the ",(0,o.kt)("em",{parentName:"p"},"Name")," and ",(0,o.kt)("em",{parentName:"p"},"Description")," of the role as well as\nthe ",(0,o.kt)("strong",{parentName:"p"},"Source"),", which displays whether the role is internal (Nexus) or a mapping to an external source like LDAP. In\norder to access these functions, a user must have ",(0,o.kt)("em",{parentName:"p"},"nx-roles")," or ",(0,o.kt)("em",{parentName:"p"},"nx-all")," ",(0,o.kt)("a",{parentName:"p",href:"#privileges"},"privileges"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-roles-list.png",src:n(30).Z,width:"610",height:"174"})),(0,o.kt)("p",null,"To create a new role, click on the ",(0,o.kt)("strong",{parentName:"p"},"Create Role")," button, select ",(0,o.kt)("strong",{parentName:"p"},"Nexus role")," and fill out the Role creation feature\nview:"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To use functions of creating, editing and deleting roles, a user without the ",(0,o.kt)("em",{parentName:"p"},"nx-all")," privilege also will need\n",(0,o.kt)("em",{parentName:"p"},"nx-privilege-read"),". This is because the roles page lists privileges on it.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-roles-create.png",src:n(5555).Z,width:"636",height:"816"})),(0,o.kt)("p",null,"When creating a new role, we will need to supply a ",(0,o.kt)("strong",{parentName:"p"},"Role ID")," and a ",(0,o.kt)("strong",{parentName:"p"},"Role Name")," and optionally a ",(0,o.kt)("strong",{parentName:"p"},"Description"),".\nRoles are comprised of other roles and individual privileges. To assign a role or privilege to a role, drag and drop the\ndesired privileges from the ",(0,o.kt)("em",{parentName:"p"},"Available")," list to the ",(0,o.kt)("em",{parentName:"p"},"Given")," list under the ",(0,o.kt)("em",{parentName:"p"},"Privileges")," header. We can use the\n",(0,o.kt)("strong",{parentName:"p"},"Filter")," input to narrow down the list of displayed privileges and the arrow buttons to add or remove privileges."),(0,o.kt)("p",null,"The same functionality is available under the ",(0,o.kt)("em",{parentName:"p"},"Roles")," header to select among the ",(0,o.kt)("em",{parentName:"p"},"Available")," roles and add them to the\nlist of ",(0,o.kt)("em",{parentName:"p"},"Contained")," roles."),(0,o.kt)("p",null,"Finally press the ",(0,o.kt)("strong",{parentName:"p"},"Save")," button to get the role created."),(0,o.kt)("p",null,"An existing role can be inspected and edited by clicking on the row in the list. This role-specific view allows us to\ndelete the role with the ",(0,o.kt)("strong",{parentName:"p"},"Delete")," button. The built-in roles are managed by the repository manager and ",(0,o.kt)("em",{parentName:"p"},"cannot")," be\nedited or deleted."),(0,o.kt)("h4",{id:"mapping-external-groups-to-nexus-roles"},"Mapping External Groups to Nexus Roles"),(0,o.kt)("p",null,"In addition to creating an internal role, the ",(0,o.kt)("strong",{parentName:"p"},"Create Role")," button allows us to create an ",(0,o.kt)("strong",{parentName:"p"},"External Role Mapping")," to\nan external authorization system configured in the repository manager such as LDAP. This is something we would do, if we\nwant to grant every member of an externally managed group (such as an LDAP group) a number of privileges and roles in\nthe repository manager"),(0,o.kt)("p",null,'For example, assume that we have a group in LDAP named "scm" and we want to make sure that everyone in that group has\nadministrative privileges.'),(0,o.kt)("p",null,"Select ",(0,o.kt)("strong",{parentName:"p"},"External Role Mapping")," and ",(0,o.kt)("strong",{parentName:"p"},"LDAP")," to see a list of roles managed by that external realm in a dialog. Pick\nthe desired scm group and confirm by pressing ",(0,o.kt)("strong",{parentName:"p"},"Create")," mapping."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"For faster access or if we cannot see our group name, we can also type in a portion or the whole name of the group and\nit will limit the dropdown to the selected text.")),(0,o.kt)("p",null,"Once the external role has been selected, creates a linked role. We can then assign other roles and privileges to this\nnew externally mapped role like we would do for any other role."),(0,o.kt)("p",null,"Any user that is part of the scm group in LDAP, receives all the privileges defined in the created role allowing us to\nadapt our generic role in LDAP to the repository manager-specific use cases we want these users to be allowed to\nperform."),(0,o.kt)("h3",{id:"users"},"Users"),(0,o.kt)("p",null,"The repository manager ships with two users by default: ",(0,o.kt)("em",{parentName:"p"},"admin")," and ",(0,o.kt)("em",{parentName:"p"},"anonymous"),". The ",(0,o.kt)("em",{parentName:"p"},"admin")," user has all privileges and\nthe ",(0,o.kt)("em",{parentName:"p"},"anonymous"),' user has read-only privileges. The initial password for the admin user can be found in an\n"admin.password" file found in the ',(0,o.kt)("inlineCode",{parentName:"p"},"$data-dir")," directory after starting the server."),(0,o.kt)("p",null,"The Users feature view displayed in figure below can be accessed via the ",(0,o.kt)("strong",{parentName:"p"},"Users")," item in the ",(0,o.kt)("strong",{parentName:"p"},"Security")," section of\nthe ",(0,o.kt)("strong",{parentName:"p"},"Administration")," menu. Users must have ",(0,o.kt)("em",{parentName:"p"},"nx-users")," or ",(0,o.kt)("em",{parentName:"p"},"nx-all")," ",(0,o.kt)("a",{parentName:"p",href:"#privileges"},"privileges"),' to see this page. On page\nload, the security Source of "Local" is selected and represents the local NXRM realm. The filtered list shows the users\'\nUser ID, First Name, Last Name, Email and Status from the security Source selected in the dropdown.'),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-users-list.png",src:n(3157).Z,width:"698",height:"174"})),(0,o.kt)("p",null,"Clicking on a user in the list or clicking on the ",(0,o.kt)("strong",{parentName:"p"},"Create local user")," button displays the details view to edit or\ncreate the account shown in figure below. For external users, such as LDAP or Crowd, once we have our external realm\nsetup we can edit their permissions here as well. Simply select the realm the user is on from the ",(0,o.kt)("strong",{parentName:"p"},"Source")," dropdown.\nThen type the user ID into the field to the right of that dropdown and search for it. Then click on the result desired\nto edit, same as a local user."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To use functions of creating, editing and deleting users, a user without the ",(0,o.kt)("em",{parentName:"p"},"nx-all")," privilege also will need\n",(0,o.kt)("em",{parentName:"p"},"nx-roles-read"),". This is because the users page lists roles on it.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-users-create.png",src:n(5891).Z,width:"640",height:"777"})),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"ID")," can be defined upon initial creation and remains fixed thereafter. In addition we can specify the users\n",(0,o.kt)("strong",{parentName:"p"},"First Name"),", ",(0,o.kt)("strong",{parentName:"p"},"Last Name")," and ",(0,o.kt)("strong",{parentName:"p"},"Email address"),".  We also must enter and confirm a ",(0,o.kt)("strong",{parentName:"p"},"Password"),"."),(0,o.kt)("p",null,"The Status allows us to set an account to be ",(0,o.kt)("em",{parentName:"p"},"Disabled")," or ",(0,o.kt)("em",{parentName:"p"},"Active"),". The ",(0,o.kt)("a",{parentName:"p",href:"#roles"},(0,o.kt)("em",{parentName:"a"},"Roles"))," control allows us to add and\nremove defined roles to the user and therefore control the privileges assigned to the user. A user can be assigned one\nor more roles that in turn can include references to other roles or to individual privileges."),(0,o.kt)("p",null,"On edit, we can select ",(0,o.kt)("strong",{parentName:"p"},"Change Password")," item in the drop down. The password can be changed in a dialog, provided the\nuser is managed by the built-in security realm."),(0,o.kt)("h3",{id:"default-role"},"Default Role"),(0,o.kt)("p",null,"The Default Role is a role that is automatically granted to all authenticated users."),(0,o.kt)("p",null,"To enable appending a default role to all authenticated users, navigate to the ",(0,o.kt)("strong",{parentName:"p"},"Capabilities")," item in the ",(0,o.kt)("strong",{parentName:"p"},"System"),"\nsection of the ",(0,o.kt)("strong",{parentName:"p"},"Administration")," menu; then hit ",(0,o.kt)("strong",{parentName:"p"},"Create capability")," and choose capability type ",(0,o.kt)("strong",{parentName:"p"},"Default Role")," as\npictured below; we will then be able to select the role that we want applied to users."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-default-role.png",src:n(702).Z,width:"835",height:"236"})),(0,o.kt)("p",null,"Once this is saved, the ",(0,o.kt)("em",{parentName:"p"},"Default Role Realm")," will be added to the active list of security realms and start applying the\nnew role to all authenticated users."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This default role is appended to authenticated users dynamically, and will ",(0,o.kt)("strong",{parentName:"p"},"NOT")," show up as assigned to any user via\nthe User administration page.")),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("h3",{id:"413-request-entity-too-large"},'"413 Request Entity Too Large"'),(0,o.kt)("p",null,'If deploying, for example, a Maven JAR or Docker image to some Nexus repository results in "413 Request Entity Too\nLarge" error, that\'s due to, in the case of Nginx as reverse proxy in front of the Nexus, our server block having a\ndefault value for ',(0,o.kt)("strong",{parentName:"p"},"client_max_body_size")," of around 1MB in size when unset."),(0,o.kt)("p",null,"To resolve this, we will need to add the following line to our server block (",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/nginx/nginx.conf"),"):"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus-413-solution.png",src:n(1584).Z,width:"707",height:"403"})),(0,o.kt)("p",null,'For more information, such as where "client_max_body_size" directive should be placed, please refer to\n',(0,o.kt)("a",{parentName:"p",href:"http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size"},"Nginx documentation")),(0,o.kt)("h3",{id:"400-repository-does-not-allow-updating-assets"},'"400 Repository does not allow updating assets"'),(0,o.kt)("p",null,"The version already exists on a release repository. We will need to either bump component version or let Nexus admin\nto delete the root folder of that component."),(0,o.kt)("h3",{id:"a-database-error-occurred"},'"A database error occurred"'),(0,o.kt)("p",null,"When we perform some disk I/O related task on UI and we see the following on the top right corner of the page:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading nexus3-strange-error.png",src:n(3259).Z,width:"561",height:"136"})),(0,o.kt)("p",null,"The error itself does not indicate any information about the nature of the error. We will then need to know more details\nabout the error by going down to the Nexus server log."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"In case Nexus is running as a Docker container, we need to jump into the container first by executing"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it <nexus-container-name> bash\n")),(0,o.kt)("p",{parentName:"admonition"},"where ",(0,o.kt)("inlineCode",{parentName:"p"},"nexus-container-name")," can be seen using ",(0,o.kt)("inlineCode",{parentName:"p"},"docker ps -a"))),(0,o.kt)("p",null,"The log file we will be looking at, in the case of running inside Docker container, is located at\n",(0,o.kt)("inlineCode",{parentName:"p"},"/nexus-data/log/nexus.log")),(0,o.kt)("div",{className:"footnotes"},(0,o.kt)("hr",{parentName:"div"}),(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol",id:"fn-example-1b726c"},(0,o.kt)("inlineCode",{parentName:"li"},'format == "npm" or (format == "maven2" and path =~ "^/org/apache/commons/.*")'),(0,o.kt)("a",{parentName:"li",href:"#fnref-example-1b726c",className:"footnote-backref"},"\u21a9")))))}c.isMDXComponent=!0},9478:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexnus3-privileges-types-050b615c87a6c40e6a69fe80211fbeb4.png"},1584:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus-413-solution-9834cbf02484a4e270c99a5b0ec4a72a.png"},3527:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-content-selector-example-40e93c3b8303b9f5ca67ad3c10dbcc30.png"},702:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-default-role-1d25b5e400a0d1012948cc239ce7fcff.png"},6909:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-privileges-application-21b2ffce139a5182fb478e3f365aeb36.png"},2759:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-privileges-partial-list-73e9e3da9e89d6ddcc8835b7f82376e4.png"},1498:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-privileges-repository-view-cac99e1fa26854a0047f0b4b969115b0.png"},4659:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-realms-0ee3d6ec7551e3a2c6fa1c5bee4305aa.png"},5555:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-roles-create-1a372c0ccc27396789ae7076c2a4f232.png"},30:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-roles-list-889e7d20d66952a5479e28d6e1d94fbd.png"},3259:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-strange-error-14e51be919fa76e974d9d3e1a46fc535.png"},5891:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-users-create-fb5fb196b6ba4efc9e5a8f76e8dac192.png"},3157:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/nexus3-users-list-70ad87d75cd36ae472067666fb3f1d20.png"}}]);