"use strict";(self.webpackChunkhashicorp_aws=self.webpackChunkhashicorp_aws||[]).push([[5009],{3057:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>I,contentTitle:()=>k,default:()=>W,frontMatter:()=>T,metadata:()=>C,toc:()=>P});var i=t(5893),s=t(1151),r=t(7294),a=t(6010),l=t(2466),o=t(6550),c=t(469),h=t(1980),u=t(7392),d=t(12);function p(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:s}}=e;return{value:n,label:t,attributes:i,default:s}}))}(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function b(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const i=(0,o.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,h._X)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,s=m(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!b({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s}))),[o,h]=g({queryString:t,groupId:i}),[u,p]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,d.Nk)(t);return[i,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:i}),f=(()=>{const e=o??u;return b({value:e,tabValues:s})?e:null})();(0,c.Z)((()=>{f&&l(f)}),[f]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!b({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),p(e)}),[h,p,s]),tabValues:s}}var v=t(2389);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function j(e){let{className:n,block:t,selectedValue:s,selectValue:r,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:h}=(0,l.o5)(),u=e=>{const n=e.currentTarget,t=c.indexOf(n),i=o[t].value;i!==s&&(h(n),r(i))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,i.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>c.push(e),onKeyDown:d,onClick:u,...r,className:(0,a.Z)("tabs__item",w.tabItem,r?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=f(e);return(0,i.jsxs)("div",{className:(0,a.Z)("tabs-container",w.tabList),children:[(0,i.jsx)(j,{...e,...n}),(0,i.jsx)(x,{...e,...n})]})}function _(e){const n=(0,v.Z)();return(0,i.jsx)(y,{...e,children:p(e.children)},String(n))}const S={tabItem:"tabItem_Ymn6"};function A(e){let{children:n,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.Z)(S.tabItem,s),hidden:t,children:n})}const T={sidebar_position:6,title:"Jersey-Jetty Based Webservice"},k=void 0,C={id:"webservice",title:"Jersey-Jetty Based Webservice",description:"[//]: # (Copyright Jiaqi Liu)",source:"@site/docs/webservice.mdx",sourceDirName:".",slug:"/webservice",permalink:"/hashicorp-aws/docs/webservice",draft:!1,unlisted:!1,editUrl:"https://github.com/QubitPi/hashicorp-aws/tree/master/docs/docs/webservice.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Jersey-Jetty Based Webservice"},sidebar:"tutorialSidebar",previous:{title:"React App",permalink:"/hashicorp-aws/docs/react"},next:{title:"Configuration Management for Immutable Infrastructure",permalink:"/hashicorp-aws/docs/IaC-configuration-management"}},I={},P=[{value:"Setup",id:"setup",level:2},{value:"HashiCorp Config Files",id:"hashicorp-config-files",level:3},{value:"Deployment via GitHub Actions",id:"deployment-via-github-actions",level:2},{value:"Jersey Webservice Template (JPA through Elide)",id:"jersey-webservice-template-jpa-through-elide",level:3},{value:"Installing Data Models",id:"installing-data-models",level:4},{value:"Docker Compose",id:"docker-compose",level:4},{value:"Deployment via Screwdriver CD",id:"deployment-via-screwdriver-cd",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"AWS",id:"aws",level:3},{value:"The Webservice was Running Properly Right After Deployment, but NOT After a While with &quot;503 Service Unavailable&quot;",id:"the-webservice-was-running-properly-right-after-deployment-but-not-after-a-while-with-503-service-unavailable",level:4}];function E(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Yes, we DO NOT support Spring, never ever"}),"\n",(0,i.jsxs)(n.li,{children:["EBS volumes during build time will ",(0,i.jsx)(n.a,{href:"https://qubitpi.github.io/hashicorp-packer/packer/integrations/hashicorp/amazon/latest/components/builder/ebs#:~:text=Optional%3A-,delete_on_termination,-(bool)%20%2D%20Indicates%20whether",children:"automatically be removed"})]}),"\n"]})}),"\n",(0,i.jsx)(n.p,{children:"Immutable Webservice by hashicorp-aws supports 2 deployment modes:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"SSL/HTTPS"}),"\n",(0,i.jsx)(n.li,{children:"non-SSL/HTTPS"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The first mode is very suitable for a mini-project such as a frontend backed by a single webservice. The second mode\nis designed for\n",(0,i.jsx)(n.a,{href:"https://dev.to/behalf/authentication-authorization-in-microservices-architecture-part-i-2cn0#global-authentication-api-gateway-and-authorization-per-service",children:"microservices architecture where authentication is deletgated to an API gateway"})]}),"\n",(0,i.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(n.p,{children:"The following credentials and config files need to be ready:"}),"\n",(0,i.jsx)(n.h3,{id:"hashicorp-config-files",children:"HashiCorp Config Files"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.a,{href:"https://qubitpi.github.io/hashicorp-packer/packer/guides/hcl/variables#from-a-file",children:"HashiCorp Packer variable file"})," with the following variable values (We will refer to the contents of this file as\n",(0,i.jsx)(n.strong,{children:"AWS_WS_PKRVARS_HCL"})," from now on)"]}),"\n",(0,i.jsxs)(_,{children:[(0,i.jsx)(A,{value:"non-ssl",label:"non-SSL/HTTPS",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'aws_image_region                 = "my-aws-region"\nami_name                         = "my-webservice"\ninstance_type                    = "<one of t2.micro/t2.small/t2.medium/t2.large/t2.xlarge/t2.2xlarge>"\nws_war_path                      = "my-webservice-1.0-SNAPSHOT.war"\n'})})}),(0,i.jsx)(A,{value:"ssl",label:"SSL/HTTPS mode",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'aws_image_region                 = "my-aws-region"\nami_name                         = "my-webservice"\ninstance_type                    = "<one of t2.micro/t2.small/t2.medium/t2.large/t2.xlarge/t2.2xlarge>"\nws_war_path                      = "my-webservice-1.0-SNAPSHOT.war"\naws_ws_ssl_cert_file_path        = "server.crt"\naws_ws_ssl_cert_key_file_path    = "server.key"\naws_ws_nginx_config_file_path    = "nginx.conf"\naws_ws_filebeat_config_file_path = "filebeat.yml"\n'})})})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.a,{href:"https://qubitpi.github.io/hashicorp-terraform/terraform/language/values/variables#variable-definitions-tfvars-files",children:"HashiCorp Terraform variable file"})," with the following variable values (We will refer to the contents of this file as\n",(0,i.jsx)(n.strong,{children:"AWS_WS_TFVARS"})," from now on)"]}),"\n",(0,i.jsxs)(_,{children:[(0,i.jsx)(A,{value:"non-ssl",label:"non-SSL/HTTPS",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'aws_deploy_region   = "my-aws-region"\nami_name            = "my-webservice"\ninstance_type       = "<one of t2.micro/t2.small/t2.medium/t2.large/t2.xlarge/t2.2xlarge>"\nec2_instance_name   = "My Webservice"\nec2_security_groups = ["My Webservice"]\nws_domain           = "mywebservice.mycompany.com"\n'})})}),(0,i.jsx)(A,{value:"ssl",label:"SSL/HTTPS mode",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'aws_deploy_region   = "my-aws-region"\nami_name            = "my-webservice"\ninstance_type       = "<one of t2.micro/t2.small/t2.medium/t2.large/t2.xlarge/t2.2xlarge>"\nec2_instance_name   = "My Webservice"\nec2_security_groups = ["My Webservice"]\nroute_53_zone_id    = "9DQXLTNSN7ZX9P8V2KZII"\nws_domain           = "mywebservice.mycompany.com"\nsentry_dsn          = "can be empty if sentry.io is not needed"\n'})})})]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Although the ",(0,i.jsx)(n.code,{children:"ws_domain"})," is a public identity, ",(0,i.jsx)(n.a,{href:"https://qubitpi.github.io/hashicorp-aws/",children:"hashicorp-aws"})," will bind a ",(0,i.jsx)(n.strong,{children:"private IP"})," address to this domain,\nbecause webservice tend to be deployed in a virtual private network and AWS also requires\n",(0,i.jsx)(n.a,{href:"https://serverfault.com/a/967483",children:"EC2 instances of different Security Groups to communicate through private IP"})]})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"deployment-via-github-actions",children:"Deployment via GitHub Actions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"jobs:\n  hashicorp:\n    name: Generated Webservice WAR in GitHub Action, and Publish Template AMI Image and Deploy it to EC2 through HashiCorp\n    needs: tests\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n      - name: Deployment environment setup\n        uses: QubitPi/hashicorp-aws/hashicorp/webservice/auxiliary/github/actions/cd-setup@master\n        with:\n          aws-ws-pkrvars-hcl: ${{ secrets.AWS_WS_PKRVARS_HCL }}\n          ssl-certificate: ${{ secrets.SSL_CERTIFICATE }}\n          ssl-certificate-key: ${{ secrets.SSL_CERTIFICATE_KEY }}\n          nginx-config-file: ${{ secrets.NGINX_CONFIG_FILE }}\n          aws-ws-tfvars: ${{ secrets.AWS_WS_TFVARS }}\n      - name: Generate webservice WAR file\n        run: mvn -B clean package\n      - name: Move WAR file to a location for HashiCorp deployment to pickup\n        run: mv target/astraios-1.0-SNAPSHOT.war ../hashicorp-aws/hashicorp/webservice/images/\n      - name: QubitPi/hashicorp-aws\n        uses: QubitPi/hashicorp-aws@master\n        with:\n          hashicorp-dir: ../hashicorp-aws/hashicorp/webservice\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: ${{ secrets.AWS_REGION }}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"cd-setup"})," step above takes an optional input parameter ",(0,i.jsx)(n.code,{children:"filebeat-config-file"})," which is the Filebeat config file"]}),"\n",(0,i.jsx)(n.h3,{id:"jersey-webservice-template-jpa-through-elide",children:"Jersey Webservice Template (JPA through Elide)"}),"\n",(0,i.jsxs)(n.p,{children:["If deployed webservice is ",(0,i.jsx)(n.a,{href:"https://qubitpi.github.io/jersey-webservice-template/docs/elide/intro",children:"JWT JPA"})," the following\nactions can also be used:"]}),"\n",(0,i.jsx)(n.h4,{id:"installing-data-models",children:"Installing Data Models"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"model-package-jar-group-id"}),' is the Maven group ID of JAR containing data models, e.g. "com.myorg"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"model-package-jar-artifact-id"}),' is the Maven artifact ID of JAR containing data models, e.g. "my-data-models"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"model-package-jar-version"}),' is the version of JAR containing data models, e.g. "3.1.7"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"models-path"}),' is the relative path to the data models repo, usually prefixed by "../". e.g. "../jpa-models"']}),"\n"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"---\nname: My CI/CD\n\njobs:\n  my-job:\n    name: My job name\n    runs-on: ubuntu-latest\n    steps:\n      - uses: QubitPi/hashicorp-aws/hashicorp/webservice/auxiliary/github/actions/jersey-webservice-template/jpa-elide/install-data-models@master\n        with:\n          model-package-jar-group-id: com.myorg\n          model-package-jar-artifact-id: my-data-models\n          model-package-jar-version: 1.0.0\n          models-path: ../my-data-models\n"})}),"\n",(0,i.jsx)(n.h4,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"Required parameters:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"webservice-repo-clone-url"})," is the git clone URL of the GitHub repo generated by ",(0,i.jsx)(n.a,{href:"https://qubitpi.github.io/jersey-webservice-template/",children:"jersey-webservice-template"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"model-package"})," is the\n",(0,i.jsx)(n.a,{href:"https://github.com/QubitPi/jersey-webservice-template-jpa-data-model/blob/master/src/main/java/com/qubitpi/ws/jersey/template/models/Book.java#L16",children:"fully qualified name of the package containing all JPA models"})]}),"\n"]}),(0,i.jsx)(n.p,{children:"Optional parameters:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"oauth-enabled"})," flags whether or not to enable ",(0,i.jsx)(n.a,{href:"https://qubitpi.github.io/jersey-webservice-template/apidocs/com/qubitpi/ws/jersey/template/web/filters/OAuthFilter.html",children:"OAuthFilter"})," container request filter. Default is ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"---\nname: My CI/CD\n\njobs:\n  my-job:\n    name: My job name\n    runs-on: ubuntu-latest\n    steps:\n      - uses: QubitPi/hashicorp-aws/hashicorp/webservice/auxiliary/github/actions/jersey-webservice-template/jpa-elide/docker-compose@master\n        with:\n          webservice-repo-clone-url: https://github.com/QubitPi/jersey-webservice-template.git\n          model-package: ${{ secrets.MODEL_PACKAGE_NAME }}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"deployment-via-screwdriver-cd",children:"Deployment via Screwdriver CD"}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"aws",children:"AWS"}),"\n",(0,i.jsx)(n.h4,{id:"the-webservice-was-running-properly-right-after-deployment-but-not-after-a-while-with-503-service-unavailable",children:'The Webservice was Running Properly Right After Deployment, but NOT After a While with "503 Service Unavailable"'}),"\n",(0,i.jsxs)(n.p,{children:["This could be the resource starvation on EC2 instance. Please try using a bigger EC2 sizes. For example, bumping\n",(0,i.jsx)(n.em,{children:"t2.micro"})," to ",(0,i.jsx)(n.em,{children:"t2.medium"}),". ",(0,i.jsx)(n.a,{href:"https://qubitpi.github.io/hashicorp-aws/",children:"hashicorp-aws"})," currently supports ",(0,i.jsx)(n.strong,{children:"t2.x"})," sizes, i.e. one of the following sizes can be\nselected:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"t2.micro"}),"\n",(0,i.jsx)(n.li,{children:"t2.small"}),"\n",(0,i.jsx)(n.li,{children:"t2.medium"}),"\n",(0,i.jsx)(n.li,{children:"t2.large"}),"\n",(0,i.jsx)(n.li,{children:"t2.xlarge"}),"\n",(0,i.jsx)(n.li,{children:"t2.2xlarge"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To modify the size, set the value of ",(0,i.jsx)(n.code,{children:"instance_type"})," in both ",(0,i.jsx)(n.em,{children:"aws-ws.pkrvars.hcl"})," and ",(0,i.jsx)(n.em,{children:"aws-ws.tfvars"}),". For\nexample:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'instance_type       = "t2.medium"\n'})})]})}function W(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(E,{...e})}):E(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>a});var i=t(7294);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);