"use strict";(self.webpackChunkaergia=self.webpackChunkaergia||[]).push([[7836],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),d=a,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4646:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const i={slug:"immutable-infrastructure",title:"What Is Immutable Infrastructure",authors:["hazel","jiaqi"],tags:["Continuous Delivery"],date:new Date("2022-08-30T00:00:00.000Z")},o=void 0,l={permalink:"/aergia/blog/immutable-infrastructure",editUrl:"https://github.com/QubitPi/aergia/tree/gh-pages/blog/immutable-infrastructure/index.md",source:"@site/blog/immutable-infrastructure/index.md",title:"What Is Immutable Infrastructure",description:"In a traditional mutable server infrastructure, servers are continually updated and modified in place. Engineers and",date:"2022-08-30T00:00:00.000Z",formattedDate:"August 30, 2022",tags:[{label:"Continuous Delivery",permalink:"/aergia/blog/tags/continuous-delivery"}],readingTime:9.135,hasTruncateMarker:!0,authors:[{name:"Hazel Vird\xf3",title:"Senior Technical Writer",url:"https://www.digitalocean.com/community/tutorials/what-is-immutable-infrastructure",imageURL:"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/DigitalOcean_logo.svg/1024px-DigitalOcean_logo.svg.png",key:"hazel"},{name:"Jiaqi Liu",title:"Maintainer of Aergia",url:"https://github.com/QubitPi",imageURL:"https://avatars.githubusercontent.com/u/16126939?v=4",key:"jiaqi"}],frontMatter:{slug:"immutable-infrastructure",title:"What Is Immutable Infrastructure",authors:["hazel","jiaqi"],tags:["Continuous Delivery"],date:"2022-08-30T00:00:00.000Z"},prevItem:{title:"Continuous Delivery",permalink:"/aergia/blog/continuous-delivery"},nextItem:{title:"Deploying v.s. Releasing",permalink:"/aergia/blog/deploying-vs-releasing"}},s={authorsImageUrls:[void 0,void 0]},u=[],c={toc:u};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In a traditional mutable server infrastructure, servers are continually updated and modified in place. Engineers and\nadministrators working with this kind of infrastructure can SSH into their servers, upgrade or downgrade packages\nmanually, tweak configuration files on a server-by-server basis, and deploy new code directly onto existing servers. In\nother words, these servers are mutable; they can be changed after they\u2019re created. Infrastructure comprised of mutable\nservers can itself be called mutable, traditional, or (disparagingly) artisanal."),(0,a.kt)("p",null,"An immutable infrastructure is another infrastructure paradigm in which servers are never modified after they're\ndeployed. If something needs to be updated, fixed, or modified in any way, new servers built from a common image with\nthe appropriate changes are provisioned to replace the old ones. After they\u2019re validated, they\u2019re put into use and the\nold ones are decommissioned."),(0,a.kt)("p",null,"The benefits of an immutable infrastructure include more consistency and reliability in your infrastructure and a\nsimpler, more predictable deployment process. It mitigates or entirely prevents issues that are common in mutable\ninfrastructures, like configuration drift and ",(0,a.kt)("a",{parentName:"p",href:"https://martinfowler.com/bliki/SnowflakeServer.html"},"snowflake servers"),".\nHowever, using it efficiently often includes comprehensive deployment automation, fast server provisioning in a cloud\ncomputing environment, and solutions for handling stateful or ephemeral data like logs."))}m.isMDXComponent=!0}}]);