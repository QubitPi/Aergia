# Copyright Jiaqi Liu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: "GitHub Secrets"
description: "Encrypting and Sending a Deployment Config to GitHub Secrets"

inputs:
  repo-owner:
    description: 'The account owner of the repository. The name is not case sensitive.'
    required: true
  repo-name:
    description: 'The name of the repository without the .git extension. The name is not case sensitive.'
    required: true
  token:
    description: 'a fine-grained access token with repository permissions that at least has "Read and write" on "Secrets" section'
    required: true
  secrets-name:
    description: 'The name of GitHub Secret as appeared on the Actions secrets list'
    required: true
  secrets-value:
    description: 'The secret value in its original human-readable form'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install Python dependencies
      run: pip3 install pynacl requests
      shell: bash
    - name: Get Python scripts for encrypting and POSTing secrets
      run: curl https://raw.githubusercontent.com/QubitPi/hashicorp-aws/master/auxiliary/github/actions/github-secret/encrypt-and-send.py > encrypt-and-send.py
      shell: bash
    - name: Encrypt and POST secrets
      run: |
        python3 encrypt-and-send.py \
            -o ${{ inputs.repo-owner }} \
            -r ${{ inputs.repo-name }} \
            -t ${{ inputs.token }} \
            -s ${{ inputs.secrets-name }} \
            -v ${{ inputs.secrets-value }}
      shell: bash
